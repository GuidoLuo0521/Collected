/* soapH.h
   Generated by gSOAP 2.8.23 from clientservice.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data), 0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data), 0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedByte(soap, data), 0) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data), 0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns1__GetQueryResponse_GetQueryResult
#define SOAP_TYPE__ns1__GetQueryResponse_GetQueryResult (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetQueryResponse_GetQueryResult(struct soap*, const char*, int, const _ns1__GetQueryResponse_GetQueryResult *, const char*);
SOAP_FMAC3 _ns1__GetQueryResponse_GetQueryResult * SOAP_FMAC4 soap_in__ns1__GetQueryResponse_GetQueryResult(struct soap*, const char*, _ns1__GetQueryResponse_GetQueryResult *, const char*);

#ifndef soap_write__ns1__GetQueryResponse_GetQueryResult
#define soap_write__ns1__GetQueryResponse_GetQueryResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:GetQueryResponse-GetQueryResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetQueryResponse_GetQueryResult * SOAP_FMAC4 soap_get__ns1__GetQueryResponse_GetQueryResult(struct soap*, _ns1__GetQueryResponse_GetQueryResult *, const char*, const char*);

#ifndef soap_read__ns1__GetQueryResponse_GetQueryResult
#define soap_read__ns1__GetQueryResponse_GetQueryResult(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetQueryResponse_GetQueryResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetQueryResponse_GetQueryResult * SOAP_FMAC2 soap_instantiate__ns1__GetQueryResponse_GetQueryResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetQueryResponse_GetQueryResult * soap_new__ns1__GetQueryResponse_GetQueryResult(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetQueryResponse_GetQueryResult(soap, n, NULL, NULL, NULL); }

inline _ns1__GetQueryResponse_GetQueryResult * soap_new_req__ns1__GetQueryResponse_GetQueryResult(struct soap *soap) { _ns1__GetQueryResponse_GetQueryResult *_p = soap_instantiate__ns1__GetQueryResponse_GetQueryResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetQueryResponse_GetQueryResult * soap_new_set__ns1__GetQueryResponse_GetQueryResult(struct soap *soap, char *__any, char *__mixed) { _ns1__GetQueryResponse_GetQueryResult *_p = soap_instantiate__ns1__GetQueryResponse_GetQueryResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetQueryResponse_GetQueryResult::__any = __any; _p->_ns1__GetQueryResponse_GetQueryResult::__mixed = __mixed; } return _p; }

inline void soap_delete__ns1__GetQueryResponse_GetQueryResult(struct soap *soap, _ns1__GetQueryResponse_GetQueryResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetQueryResponse_GetQueryResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetReportStateResponse_GetReportStateResult
#define SOAP_TYPE__ns1__GetReportStateResponse_GetReportStateResult (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetReportStateResponse_GetReportStateResult(struct soap*, const char*, int, const _ns1__GetReportStateResponse_GetReportStateResult *, const char*);
SOAP_FMAC3 _ns1__GetReportStateResponse_GetReportStateResult * SOAP_FMAC4 soap_in__ns1__GetReportStateResponse_GetReportStateResult(struct soap*, const char*, _ns1__GetReportStateResponse_GetReportStateResult *, const char*);

#ifndef soap_write__ns1__GetReportStateResponse_GetReportStateResult
#define soap_write__ns1__GetReportStateResponse_GetReportStateResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:GetReportStateResponse-GetReportStateResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetReportStateResponse_GetReportStateResult * SOAP_FMAC4 soap_get__ns1__GetReportStateResponse_GetReportStateResult(struct soap*, _ns1__GetReportStateResponse_GetReportStateResult *, const char*, const char*);

#ifndef soap_read__ns1__GetReportStateResponse_GetReportStateResult
#define soap_read__ns1__GetReportStateResponse_GetReportStateResult(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetReportStateResponse_GetReportStateResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetReportStateResponse_GetReportStateResult * SOAP_FMAC2 soap_instantiate__ns1__GetReportStateResponse_GetReportStateResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetReportStateResponse_GetReportStateResult * soap_new__ns1__GetReportStateResponse_GetReportStateResult(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetReportStateResponse_GetReportStateResult(soap, n, NULL, NULL, NULL); }

inline _ns1__GetReportStateResponse_GetReportStateResult * soap_new_req__ns1__GetReportStateResponse_GetReportStateResult(struct soap *soap) { _ns1__GetReportStateResponse_GetReportStateResult *_p = soap_instantiate__ns1__GetReportStateResponse_GetReportStateResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetReportStateResponse_GetReportStateResult * soap_new_set__ns1__GetReportStateResponse_GetReportStateResult(struct soap *soap, char *__any, char *__mixed) { _ns1__GetReportStateResponse_GetReportStateResult *_p = soap_instantiate__ns1__GetReportStateResponse_GetReportStateResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetReportStateResponse_GetReportStateResult::__any = __any; _p->_ns1__GetReportStateResponse_GetReportStateResult::__mixed = __mixed; } return _p; }

inline void soap_delete__ns1__GetReportStateResponse_GetReportStateResult(struct soap *soap, _ns1__GetReportStateResponse_GetReportStateResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetReportStateResponse_GetReportStateResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdateQueryResponse
#define SOAP_TYPE__ns1__UpdateQueryResponse (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdateQueryResponse(struct soap*, const char*, int, const _ns1__UpdateQueryResponse *, const char*);
SOAP_FMAC3 _ns1__UpdateQueryResponse * SOAP_FMAC4 soap_in__ns1__UpdateQueryResponse(struct soap*, const char*, _ns1__UpdateQueryResponse *, const char*);

#ifndef soap_write__ns1__UpdateQueryResponse
#define soap_write__ns1__UpdateQueryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UpdateQueryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateQueryResponse * SOAP_FMAC4 soap_get__ns1__UpdateQueryResponse(struct soap*, _ns1__UpdateQueryResponse *, const char*, const char*);

#ifndef soap_read__ns1__UpdateQueryResponse
#define soap_read__ns1__UpdateQueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdateQueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdateQueryResponse * SOAP_FMAC2 soap_instantiate__ns1__UpdateQueryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdateQueryResponse * soap_new__ns1__UpdateQueryResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdateQueryResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdateQueryResponse * soap_new_req__ns1__UpdateQueryResponse(struct soap *soap) { _ns1__UpdateQueryResponse *_p = soap_instantiate__ns1__UpdateQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdateQueryResponse * soap_new_set__ns1__UpdateQueryResponse(struct soap *soap) { _ns1__UpdateQueryResponse *_p = soap_instantiate__ns1__UpdateQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__UpdateQueryResponse(struct soap *soap, _ns1__UpdateQueryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdateQueryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdateQuery
#define SOAP_TYPE__ns1__UpdateQuery (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdateQuery(struct soap*, const char*, int, const _ns1__UpdateQuery *, const char*);
SOAP_FMAC3 _ns1__UpdateQuery * SOAP_FMAC4 soap_in__ns1__UpdateQuery(struct soap*, const char*, _ns1__UpdateQuery *, const char*);

#ifndef soap_write__ns1__UpdateQuery
#define soap_write__ns1__UpdateQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UpdateQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateQuery * SOAP_FMAC4 soap_get__ns1__UpdateQuery(struct soap*, _ns1__UpdateQuery *, const char*, const char*);

#ifndef soap_read__ns1__UpdateQuery
#define soap_read__ns1__UpdateQuery(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdateQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdateQuery * SOAP_FMAC2 soap_instantiate__ns1__UpdateQuery(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdateQuery * soap_new__ns1__UpdateQuery(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdateQuery(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdateQuery * soap_new_req__ns1__UpdateQuery(struct soap *soap) { _ns1__UpdateQuery *_p = soap_instantiate__ns1__UpdateQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdateQuery * soap_new_set__ns1__UpdateQuery(struct soap *soap, char *sql) { _ns1__UpdateQuery *_p = soap_instantiate__ns1__UpdateQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdateQuery::sql = sql; } return _p; }

inline void soap_delete__ns1__UpdateQuery(struct soap *soap, _ns1__UpdateQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdateQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetQueryResponse
#define SOAP_TYPE__ns1__GetQueryResponse (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetQueryResponse(struct soap*, const char*, int, const _ns1__GetQueryResponse *, const char*);
SOAP_FMAC3 _ns1__GetQueryResponse * SOAP_FMAC4 soap_in__ns1__GetQueryResponse(struct soap*, const char*, _ns1__GetQueryResponse *, const char*);

#ifndef soap_write__ns1__GetQueryResponse
#define soap_write__ns1__GetQueryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:GetQueryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetQueryResponse * SOAP_FMAC4 soap_get__ns1__GetQueryResponse(struct soap*, _ns1__GetQueryResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetQueryResponse
#define soap_read__ns1__GetQueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetQueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetQueryResponse * SOAP_FMAC2 soap_instantiate__ns1__GetQueryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetQueryResponse * soap_new__ns1__GetQueryResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetQueryResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetQueryResponse * soap_new_req__ns1__GetQueryResponse(struct soap *soap) { _ns1__GetQueryResponse *_p = soap_instantiate__ns1__GetQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetQueryResponse * soap_new_set__ns1__GetQueryResponse(struct soap *soap, _ns1__GetQueryResponse_GetQueryResult *GetQueryResult) { _ns1__GetQueryResponse *_p = soap_instantiate__ns1__GetQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetQueryResponse::GetQueryResult = GetQueryResult; } return _p; }

inline void soap_delete__ns1__GetQueryResponse(struct soap *soap, _ns1__GetQueryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetQueryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetQuery
#define SOAP_TYPE__ns1__GetQuery (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetQuery(struct soap*, const char*, int, const _ns1__GetQuery *, const char*);
SOAP_FMAC3 _ns1__GetQuery * SOAP_FMAC4 soap_in__ns1__GetQuery(struct soap*, const char*, _ns1__GetQuery *, const char*);

#ifndef soap_write__ns1__GetQuery
#define soap_write__ns1__GetQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:GetQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetQuery * SOAP_FMAC4 soap_get__ns1__GetQuery(struct soap*, _ns1__GetQuery *, const char*, const char*);

#ifndef soap_read__ns1__GetQuery
#define soap_read__ns1__GetQuery(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetQuery * SOAP_FMAC2 soap_instantiate__ns1__GetQuery(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetQuery * soap_new__ns1__GetQuery(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetQuery(soap, n, NULL, NULL, NULL); }

inline _ns1__GetQuery * soap_new_req__ns1__GetQuery(struct soap *soap) { _ns1__GetQuery *_p = soap_instantiate__ns1__GetQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetQuery * soap_new_set__ns1__GetQuery(struct soap *soap, char *sql) { _ns1__GetQuery *_p = soap_instantiate__ns1__GetQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetQuery::sql = sql; } return _p; }

inline void soap_delete__ns1__GetQuery(struct soap *soap, _ns1__GetQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadFileResponse
#define SOAP_TYPE__ns1__UploadFileResponse (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadFileResponse(struct soap*, const char*, int, const _ns1__UploadFileResponse *, const char*);
SOAP_FMAC3 _ns1__UploadFileResponse * SOAP_FMAC4 soap_in__ns1__UploadFileResponse(struct soap*, const char*, _ns1__UploadFileResponse *, const char*);

#ifndef soap_write__ns1__UploadFileResponse
#define soap_write__ns1__UploadFileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UploadFileResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UploadFileResponse * SOAP_FMAC4 soap_get__ns1__UploadFileResponse(struct soap*, _ns1__UploadFileResponse *, const char*, const char*);

#ifndef soap_read__ns1__UploadFileResponse
#define soap_read__ns1__UploadFileResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadFileResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UploadFileResponse * SOAP_FMAC2 soap_instantiate__ns1__UploadFileResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UploadFileResponse * soap_new__ns1__UploadFileResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UploadFileResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__UploadFileResponse * soap_new_req__ns1__UploadFileResponse(struct soap *soap) { _ns1__UploadFileResponse *_p = soap_instantiate__ns1__UploadFileResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UploadFileResponse * soap_new_set__ns1__UploadFileResponse(struct soap *soap, char *UploadFileResult) { _ns1__UploadFileResponse *_p = soap_instantiate__ns1__UploadFileResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UploadFileResponse::UploadFileResult = UploadFileResult; } return _p; }

inline void soap_delete__ns1__UploadFileResponse(struct soap *soap, _ns1__UploadFileResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadFileResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadFile
#define SOAP_TYPE__ns1__UploadFile (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadFile(struct soap*, const char*, int, const _ns1__UploadFile *, const char*);
SOAP_FMAC3 _ns1__UploadFile * SOAP_FMAC4 soap_in__ns1__UploadFile(struct soap*, const char*, _ns1__UploadFile *, const char*);

#ifndef soap_write__ns1__UploadFile
#define soap_write__ns1__UploadFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UploadFile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UploadFile * SOAP_FMAC4 soap_get__ns1__UploadFile(struct soap*, _ns1__UploadFile *, const char*, const char*);

#ifndef soap_read__ns1__UploadFile
#define soap_read__ns1__UploadFile(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadFile(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UploadFile * SOAP_FMAC2 soap_instantiate__ns1__UploadFile(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UploadFile * soap_new__ns1__UploadFile(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UploadFile(soap, n, NULL, NULL, NULL); }

inline _ns1__UploadFile * soap_new_req__ns1__UploadFile(struct soap *soap) { _ns1__UploadFile *_p = soap_instantiate__ns1__UploadFile(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UploadFile * soap_new_set__ns1__UploadFile(struct soap *soap, char *persondataid, char *sFileName, xsd__base64Binary *pFileContent) { _ns1__UploadFile *_p = soap_instantiate__ns1__UploadFile(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UploadFile::persondataid = persondataid; _p->_ns1__UploadFile::sFileName = sFileName; _p->_ns1__UploadFile::pFileContent = pFileContent; } return _p; }

inline void soap_delete__ns1__UploadFile(struct soap *soap, _ns1__UploadFile *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadFile(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SyncReportStateResponse
#define SOAP_TYPE__ns1__SyncReportStateResponse (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SyncReportStateResponse(struct soap*, const char*, int, const _ns1__SyncReportStateResponse *, const char*);
SOAP_FMAC3 _ns1__SyncReportStateResponse * SOAP_FMAC4 soap_in__ns1__SyncReportStateResponse(struct soap*, const char*, _ns1__SyncReportStateResponse *, const char*);

#ifndef soap_write__ns1__SyncReportStateResponse
#define soap_write__ns1__SyncReportStateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:SyncReportStateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SyncReportStateResponse * SOAP_FMAC4 soap_get__ns1__SyncReportStateResponse(struct soap*, _ns1__SyncReportStateResponse *, const char*, const char*);

#ifndef soap_read__ns1__SyncReportStateResponse
#define soap_read__ns1__SyncReportStateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SyncReportStateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SyncReportStateResponse * SOAP_FMAC2 soap_instantiate__ns1__SyncReportStateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SyncReportStateResponse * soap_new__ns1__SyncReportStateResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SyncReportStateResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__SyncReportStateResponse * soap_new_req__ns1__SyncReportStateResponse(struct soap *soap) { _ns1__SyncReportStateResponse *_p = soap_instantiate__ns1__SyncReportStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SyncReportStateResponse * soap_new_set__ns1__SyncReportStateResponse(struct soap *soap, char *SyncReportStateResult) { _ns1__SyncReportStateResponse *_p = soap_instantiate__ns1__SyncReportStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SyncReportStateResponse::SyncReportStateResult = SyncReportStateResult; } return _p; }

inline void soap_delete__ns1__SyncReportStateResponse(struct soap *soap, _ns1__SyncReportStateResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SyncReportStateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SyncReportState
#define SOAP_TYPE__ns1__SyncReportState (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SyncReportState(struct soap*, const char*, int, const _ns1__SyncReportState *, const char*);
SOAP_FMAC3 _ns1__SyncReportState * SOAP_FMAC4 soap_in__ns1__SyncReportState(struct soap*, const char*, _ns1__SyncReportState *, const char*);

#ifndef soap_write__ns1__SyncReportState
#define soap_write__ns1__SyncReportState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:SyncReportState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SyncReportState * SOAP_FMAC4 soap_get__ns1__SyncReportState(struct soap*, _ns1__SyncReportState *, const char*, const char*);

#ifndef soap_read__ns1__SyncReportState
#define soap_read__ns1__SyncReportState(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SyncReportState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SyncReportState * SOAP_FMAC2 soap_instantiate__ns1__SyncReportState(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SyncReportState * soap_new__ns1__SyncReportState(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SyncReportState(soap, n, NULL, NULL, NULL); }

inline _ns1__SyncReportState * soap_new_req__ns1__SyncReportState(struct soap *soap) { _ns1__SyncReportState *_p = soap_instantiate__ns1__SyncReportState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SyncReportState * soap_new_set__ns1__SyncReportState(struct soap *soap, char *nCheckStationID, char *starthandledtm, char *endhandledtm, char *reportcollectdtm) { _ns1__SyncReportState *_p = soap_instantiate__ns1__SyncReportState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SyncReportState::nCheckStationID = nCheckStationID; _p->_ns1__SyncReportState::starthandledtm = starthandledtm; _p->_ns1__SyncReportState::endhandledtm = endhandledtm; _p->_ns1__SyncReportState::reportcollectdtm = reportcollectdtm; } return _p; }

inline void soap_delete__ns1__SyncReportState(struct soap *soap, _ns1__SyncReportState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SyncReportState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdateDataStateResponse
#define SOAP_TYPE__ns1__UpdateDataStateResponse (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdateDataStateResponse(struct soap*, const char*, int, const _ns1__UpdateDataStateResponse *, const char*);
SOAP_FMAC3 _ns1__UpdateDataStateResponse * SOAP_FMAC4 soap_in__ns1__UpdateDataStateResponse(struct soap*, const char*, _ns1__UpdateDataStateResponse *, const char*);

#ifndef soap_write__ns1__UpdateDataStateResponse
#define soap_write__ns1__UpdateDataStateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UpdateDataStateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateDataStateResponse * SOAP_FMAC4 soap_get__ns1__UpdateDataStateResponse(struct soap*, _ns1__UpdateDataStateResponse *, const char*, const char*);

#ifndef soap_read__ns1__UpdateDataStateResponse
#define soap_read__ns1__UpdateDataStateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdateDataStateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdateDataStateResponse * SOAP_FMAC2 soap_instantiate__ns1__UpdateDataStateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdateDataStateResponse * soap_new__ns1__UpdateDataStateResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdateDataStateResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdateDataStateResponse * soap_new_req__ns1__UpdateDataStateResponse(struct soap *soap) { _ns1__UpdateDataStateResponse *_p = soap_instantiate__ns1__UpdateDataStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdateDataStateResponse * soap_new_set__ns1__UpdateDataStateResponse(struct soap *soap, char *UpdateDataStateResult) { _ns1__UpdateDataStateResponse *_p = soap_instantiate__ns1__UpdateDataStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdateDataStateResponse::UpdateDataStateResult = UpdateDataStateResult; } return _p; }

inline void soap_delete__ns1__UpdateDataStateResponse(struct soap *soap, _ns1__UpdateDataStateResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdateDataStateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdateDataState
#define SOAP_TYPE__ns1__UpdateDataState (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdateDataState(struct soap*, const char*, int, const _ns1__UpdateDataState *, const char*);
SOAP_FMAC3 _ns1__UpdateDataState * SOAP_FMAC4 soap_in__ns1__UpdateDataState(struct soap*, const char*, _ns1__UpdateDataState *, const char*);

#ifndef soap_write__ns1__UpdateDataState
#define soap_write__ns1__UpdateDataState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UpdateDataState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateDataState * SOAP_FMAC4 soap_get__ns1__UpdateDataState(struct soap*, _ns1__UpdateDataState *, const char*, const char*);

#ifndef soap_read__ns1__UpdateDataState
#define soap_read__ns1__UpdateDataState(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdateDataState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdateDataState * SOAP_FMAC2 soap_instantiate__ns1__UpdateDataState(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdateDataState * soap_new__ns1__UpdateDataState(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdateDataState(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdateDataState * soap_new_req__ns1__UpdateDataState(struct soap *soap) { _ns1__UpdateDataState *_p = soap_instantiate__ns1__UpdateDataState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdateDataState * soap_new_set__ns1__UpdateDataState(struct soap *soap, char *nPersondataid, char *sFileName, char *sFileDesc, char *sOccurDtm, char *lFileLength, char *lDataFrom) { _ns1__UpdateDataState *_p = soap_instantiate__ns1__UpdateDataState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdateDataState::nPersondataid = nPersondataid; _p->_ns1__UpdateDataState::sFileName = sFileName; _p->_ns1__UpdateDataState::sFileDesc = sFileDesc; _p->_ns1__UpdateDataState::sOccurDtm = sOccurDtm; _p->_ns1__UpdateDataState::lFileLength = lFileLength; _p->_ns1__UpdateDataState::lDataFrom = lDataFrom; } return _p; }

inline void soap_delete__ns1__UpdateDataState(struct soap *soap, _ns1__UpdateDataState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdateDataState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SyncDataStateResponse
#define SOAP_TYPE__ns1__SyncDataStateResponse (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SyncDataStateResponse(struct soap*, const char*, int, const _ns1__SyncDataStateResponse *, const char*);
SOAP_FMAC3 _ns1__SyncDataStateResponse * SOAP_FMAC4 soap_in__ns1__SyncDataStateResponse(struct soap*, const char*, _ns1__SyncDataStateResponse *, const char*);

#ifndef soap_write__ns1__SyncDataStateResponse
#define soap_write__ns1__SyncDataStateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:SyncDataStateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SyncDataStateResponse * SOAP_FMAC4 soap_get__ns1__SyncDataStateResponse(struct soap*, _ns1__SyncDataStateResponse *, const char*, const char*);

#ifndef soap_read__ns1__SyncDataStateResponse
#define soap_read__ns1__SyncDataStateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SyncDataStateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SyncDataStateResponse * SOAP_FMAC2 soap_instantiate__ns1__SyncDataStateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SyncDataStateResponse * soap_new__ns1__SyncDataStateResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SyncDataStateResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__SyncDataStateResponse * soap_new_req__ns1__SyncDataStateResponse(struct soap *soap) { _ns1__SyncDataStateResponse *_p = soap_instantiate__ns1__SyncDataStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SyncDataStateResponse * soap_new_set__ns1__SyncDataStateResponse(struct soap *soap, char *SyncDataStateResult) { _ns1__SyncDataStateResponse *_p = soap_instantiate__ns1__SyncDataStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SyncDataStateResponse::SyncDataStateResult = SyncDataStateResult; } return _p; }

inline void soap_delete__ns1__SyncDataStateResponse(struct soap *soap, _ns1__SyncDataStateResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SyncDataStateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SyncDataState
#define SOAP_TYPE__ns1__SyncDataState (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SyncDataState(struct soap*, const char*, int, const _ns1__SyncDataState *, const char*);
SOAP_FMAC3 _ns1__SyncDataState * SOAP_FMAC4 soap_in__ns1__SyncDataState(struct soap*, const char*, _ns1__SyncDataState *, const char*);

#ifndef soap_write__ns1__SyncDataState
#define soap_write__ns1__SyncDataState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:SyncDataState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SyncDataState * SOAP_FMAC4 soap_get__ns1__SyncDataState(struct soap*, _ns1__SyncDataState *, const char*, const char*);

#ifndef soap_read__ns1__SyncDataState
#define soap_read__ns1__SyncDataState(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SyncDataState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SyncDataState * SOAP_FMAC2 soap_instantiate__ns1__SyncDataState(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SyncDataState * soap_new__ns1__SyncDataState(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SyncDataState(soap, n, NULL, NULL, NULL); }

inline _ns1__SyncDataState * soap_new_req__ns1__SyncDataState(struct soap *soap) { _ns1__SyncDataState *_p = soap_instantiate__ns1__SyncDataState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SyncDataState * soap_new_set__ns1__SyncDataState(struct soap *soap, char *nCheckStationID, char *sDatetime) { _ns1__SyncDataState *_p = soap_instantiate__ns1__SyncDataState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SyncDataState::nCheckStationID = nCheckStationID; _p->_ns1__SyncDataState::sDatetime = sDatetime; } return _p; }

inline void soap_delete__ns1__SyncDataState(struct soap *soap, _ns1__SyncDataState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SyncDataState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdatePatientInfoResponse
#define SOAP_TYPE__ns1__UpdatePatientInfoResponse (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdatePatientInfoResponse(struct soap*, const char*, int, const _ns1__UpdatePatientInfoResponse *, const char*);
SOAP_FMAC3 _ns1__UpdatePatientInfoResponse * SOAP_FMAC4 soap_in__ns1__UpdatePatientInfoResponse(struct soap*, const char*, _ns1__UpdatePatientInfoResponse *, const char*);

#ifndef soap_write__ns1__UpdatePatientInfoResponse
#define soap_write__ns1__UpdatePatientInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UpdatePatientInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdatePatientInfoResponse * SOAP_FMAC4 soap_get__ns1__UpdatePatientInfoResponse(struct soap*, _ns1__UpdatePatientInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__UpdatePatientInfoResponse
#define soap_read__ns1__UpdatePatientInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdatePatientInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdatePatientInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__UpdatePatientInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdatePatientInfoResponse * soap_new__ns1__UpdatePatientInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdatePatientInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdatePatientInfoResponse * soap_new_req__ns1__UpdatePatientInfoResponse(struct soap *soap) { _ns1__UpdatePatientInfoResponse *_p = soap_instantiate__ns1__UpdatePatientInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdatePatientInfoResponse * soap_new_set__ns1__UpdatePatientInfoResponse(struct soap *soap, char *UpdatePatientInfoResult) { _ns1__UpdatePatientInfoResponse *_p = soap_instantiate__ns1__UpdatePatientInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdatePatientInfoResponse::UpdatePatientInfoResult = UpdatePatientInfoResult; } return _p; }

inline void soap_delete__ns1__UpdatePatientInfoResponse(struct soap *soap, _ns1__UpdatePatientInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdatePatientInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdatePatientInfo
#define SOAP_TYPE__ns1__UpdatePatientInfo (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdatePatientInfo(struct soap*, const char*, int, const _ns1__UpdatePatientInfo *, const char*);
SOAP_FMAC3 _ns1__UpdatePatientInfo * SOAP_FMAC4 soap_in__ns1__UpdatePatientInfo(struct soap*, const char*, _ns1__UpdatePatientInfo *, const char*);

#ifndef soap_write__ns1__UpdatePatientInfo
#define soap_write__ns1__UpdatePatientInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UpdatePatientInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdatePatientInfo * SOAP_FMAC4 soap_get__ns1__UpdatePatientInfo(struct soap*, _ns1__UpdatePatientInfo *, const char*, const char*);

#ifndef soap_read__ns1__UpdatePatientInfo
#define soap_read__ns1__UpdatePatientInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdatePatientInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdatePatientInfo * SOAP_FMAC2 soap_instantiate__ns1__UpdatePatientInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdatePatientInfo * soap_new__ns1__UpdatePatientInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdatePatientInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdatePatientInfo * soap_new_req__ns1__UpdatePatientInfo(struct soap *soap) { _ns1__UpdatePatientInfo *_p = soap_instantiate__ns1__UpdatePatientInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdatePatientInfo * soap_new_set__ns1__UpdatePatientInfo(struct soap *soap, char *sAccount, char *sjsonPatientInfo) { _ns1__UpdatePatientInfo *_p = soap_instantiate__ns1__UpdatePatientInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdatePatientInfo::sAccount = sAccount; _p->_ns1__UpdatePatientInfo::sjsonPatientInfo = sjsonPatientInfo; } return _p; }

inline void soap_delete__ns1__UpdatePatientInfo(struct soap *soap, _ns1__UpdatePatientInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdatePatientInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SyncPatientInfoResponse
#define SOAP_TYPE__ns1__SyncPatientInfoResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SyncPatientInfoResponse(struct soap*, const char*, int, const _ns1__SyncPatientInfoResponse *, const char*);
SOAP_FMAC3 _ns1__SyncPatientInfoResponse * SOAP_FMAC4 soap_in__ns1__SyncPatientInfoResponse(struct soap*, const char*, _ns1__SyncPatientInfoResponse *, const char*);

#ifndef soap_write__ns1__SyncPatientInfoResponse
#define soap_write__ns1__SyncPatientInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:SyncPatientInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SyncPatientInfoResponse * SOAP_FMAC4 soap_get__ns1__SyncPatientInfoResponse(struct soap*, _ns1__SyncPatientInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__SyncPatientInfoResponse
#define soap_read__ns1__SyncPatientInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SyncPatientInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SyncPatientInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__SyncPatientInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SyncPatientInfoResponse * soap_new__ns1__SyncPatientInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SyncPatientInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__SyncPatientInfoResponse * soap_new_req__ns1__SyncPatientInfoResponse(struct soap *soap) { _ns1__SyncPatientInfoResponse *_p = soap_instantiate__ns1__SyncPatientInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SyncPatientInfoResponse * soap_new_set__ns1__SyncPatientInfoResponse(struct soap *soap, char *SyncPatientInfoResult) { _ns1__SyncPatientInfoResponse *_p = soap_instantiate__ns1__SyncPatientInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SyncPatientInfoResponse::SyncPatientInfoResult = SyncPatientInfoResult; } return _p; }

inline void soap_delete__ns1__SyncPatientInfoResponse(struct soap *soap, _ns1__SyncPatientInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SyncPatientInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SyncPatientInfo
#define SOAP_TYPE__ns1__SyncPatientInfo (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SyncPatientInfo(struct soap*, const char*, int, const _ns1__SyncPatientInfo *, const char*);
SOAP_FMAC3 _ns1__SyncPatientInfo * SOAP_FMAC4 soap_in__ns1__SyncPatientInfo(struct soap*, const char*, _ns1__SyncPatientInfo *, const char*);

#ifndef soap_write__ns1__SyncPatientInfo
#define soap_write__ns1__SyncPatientInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:SyncPatientInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SyncPatientInfo * SOAP_FMAC4 soap_get__ns1__SyncPatientInfo(struct soap*, _ns1__SyncPatientInfo *, const char*, const char*);

#ifndef soap_read__ns1__SyncPatientInfo
#define soap_read__ns1__SyncPatientInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SyncPatientInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SyncPatientInfo * SOAP_FMAC2 soap_instantiate__ns1__SyncPatientInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SyncPatientInfo * soap_new__ns1__SyncPatientInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SyncPatientInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__SyncPatientInfo * soap_new_req__ns1__SyncPatientInfo(struct soap *soap) { _ns1__SyncPatientInfo *_p = soap_instantiate__ns1__SyncPatientInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SyncPatientInfo * soap_new_set__ns1__SyncPatientInfo(struct soap *soap, char *nCheckStationID, char *sDatetime) { _ns1__SyncPatientInfo *_p = soap_instantiate__ns1__SyncPatientInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SyncPatientInfo::nCheckStationID = nCheckStationID; _p->_ns1__SyncPatientInfo::sDatetime = sDatetime; } return _p; }

inline void soap_delete__ns1__SyncPatientInfo(struct soap *soap, _ns1__SyncPatientInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SyncPatientInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LoginResponse
#define SOAP_TYPE__ns1__LoginResponse (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LoginResponse(struct soap*, const char*, int, const _ns1__LoginResponse *, const char*);
SOAP_FMAC3 _ns1__LoginResponse * SOAP_FMAC4 soap_in__ns1__LoginResponse(struct soap*, const char*, _ns1__LoginResponse *, const char*);

#ifndef soap_write__ns1__LoginResponse
#define soap_write__ns1__LoginResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:LoginResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LoginResponse * SOAP_FMAC4 soap_get__ns1__LoginResponse(struct soap*, _ns1__LoginResponse *, const char*, const char*);

#ifndef soap_read__ns1__LoginResponse
#define soap_read__ns1__LoginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LoginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LoginResponse * SOAP_FMAC2 soap_instantiate__ns1__LoginResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LoginResponse * soap_new__ns1__LoginResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LoginResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__LoginResponse * soap_new_req__ns1__LoginResponse(struct soap *soap) { _ns1__LoginResponse *_p = soap_instantiate__ns1__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__LoginResponse * soap_new_set__ns1__LoginResponse(struct soap *soap, char *LoginResult) { _ns1__LoginResponse *_p = soap_instantiate__ns1__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LoginResponse::LoginResult = LoginResult; } return _p; }

inline void soap_delete__ns1__LoginResponse(struct soap *soap, _ns1__LoginResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LoginResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Login
#define SOAP_TYPE__ns1__Login (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Login(struct soap*, const char*, int, const _ns1__Login *, const char*);
SOAP_FMAC3 _ns1__Login * SOAP_FMAC4 soap_in__ns1__Login(struct soap*, const char*, _ns1__Login *, const char*);

#ifndef soap_write__ns1__Login
#define soap_write__ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Login * SOAP_FMAC4 soap_get__ns1__Login(struct soap*, _ns1__Login *, const char*, const char*);

#ifndef soap_read__ns1__Login
#define soap_read__ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__Login * SOAP_FMAC2 soap_instantiate__ns1__Login(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Login * soap_new__ns1__Login(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Login(soap, n, NULL, NULL, NULL); }

inline _ns1__Login * soap_new_req__ns1__Login(struct soap *soap) { _ns1__Login *_p = soap_instantiate__ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__Login * soap_new_set__ns1__Login(struct soap *soap, char *sAccount, char *sPassword, char *softdtmpad) { _ns1__Login *_p = soap_instantiate__ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Login::sAccount = sAccount; _p->_ns1__Login::sPassword = sPassword; _p->_ns1__Login::softdtmpad = softdtmpad; } return _p; }

inline void soap_delete__ns1__Login(struct soap *soap, _ns1__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetReportStateResponse
#define SOAP_TYPE__ns1__GetReportStateResponse (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetReportStateResponse(struct soap*, const char*, int, const _ns1__GetReportStateResponse *, const char*);
SOAP_FMAC3 _ns1__GetReportStateResponse * SOAP_FMAC4 soap_in__ns1__GetReportStateResponse(struct soap*, const char*, _ns1__GetReportStateResponse *, const char*);

#ifndef soap_write__ns1__GetReportStateResponse
#define soap_write__ns1__GetReportStateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:GetReportStateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetReportStateResponse * SOAP_FMAC4 soap_get__ns1__GetReportStateResponse(struct soap*, _ns1__GetReportStateResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetReportStateResponse
#define soap_read__ns1__GetReportStateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetReportStateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetReportStateResponse * SOAP_FMAC2 soap_instantiate__ns1__GetReportStateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetReportStateResponse * soap_new__ns1__GetReportStateResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetReportStateResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetReportStateResponse * soap_new_req__ns1__GetReportStateResponse(struct soap *soap) { _ns1__GetReportStateResponse *_p = soap_instantiate__ns1__GetReportStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetReportStateResponse * soap_new_set__ns1__GetReportStateResponse(struct soap *soap, _ns1__GetReportStateResponse_GetReportStateResult *GetReportStateResult) { _ns1__GetReportStateResponse *_p = soap_instantiate__ns1__GetReportStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetReportStateResponse::GetReportStateResult = GetReportStateResult; } return _p; }

inline void soap_delete__ns1__GetReportStateResponse(struct soap *soap, _ns1__GetReportStateResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetReportStateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetReportState
#define SOAP_TYPE__ns1__GetReportState (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetReportState(struct soap*, const char*, int, const _ns1__GetReportState *, const char*);
SOAP_FMAC3 _ns1__GetReportState * SOAP_FMAC4 soap_in__ns1__GetReportState(struct soap*, const char*, _ns1__GetReportState *, const char*);

#ifndef soap_write__ns1__GetReportState
#define soap_write__ns1__GetReportState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:GetReportState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetReportState * SOAP_FMAC4 soap_get__ns1__GetReportState(struct soap*, _ns1__GetReportState *, const char*, const char*);

#ifndef soap_read__ns1__GetReportState
#define soap_read__ns1__GetReportState(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetReportState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetReportState * SOAP_FMAC2 soap_instantiate__ns1__GetReportState(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetReportState * soap_new__ns1__GetReportState(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetReportState(soap, n, NULL, NULL, NULL); }

inline _ns1__GetReportState * soap_new_req__ns1__GetReportState(struct soap *soap) { _ns1__GetReportState *_p = soap_instantiate__ns1__GetReportState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetReportState * soap_new_set__ns1__GetReportState(struct soap *soap, char *sFileName) { _ns1__GetReportState *_p = soap_instantiate__ns1__GetReportState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetReportState::sFileName = sFileName; } return _p; }

inline void soap_delete__ns1__GetReportState(struct soap *soap, _ns1__GetReportState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetReportState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__AuthHeader
#define SOAP_TYPE_ns1__AuthHeader (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__AuthHeader(struct soap*, const char*, int, const ns1__AuthHeader *, const char*);
SOAP_FMAC3 ns1__AuthHeader * SOAP_FMAC4 soap_in_ns1__AuthHeader(struct soap*, const char*, ns1__AuthHeader *, const char*);

#ifndef soap_write_ns1__AuthHeader
#define soap_write_ns1__AuthHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:AuthHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__AuthHeader * SOAP_FMAC4 soap_get_ns1__AuthHeader(struct soap*, ns1__AuthHeader *, const char*, const char*);

#ifndef soap_read_ns1__AuthHeader
#define soap_read_ns1__AuthHeader(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__AuthHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__AuthHeader * SOAP_FMAC2 soap_instantiate_ns1__AuthHeader(struct soap*, int, const char*, const char*, size_t*);

inline ns1__AuthHeader * soap_new_ns1__AuthHeader(struct soap *soap, int n = -1) { return soap_instantiate_ns1__AuthHeader(soap, n, NULL, NULL, NULL); }

inline ns1__AuthHeader * soap_new_req_ns1__AuthHeader(struct soap *soap) { ns1__AuthHeader *_p = soap_instantiate_ns1__AuthHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__AuthHeader * soap_new_set_ns1__AuthHeader(struct soap *soap, char *authKey, char *__anyAttribute) { ns1__AuthHeader *_p = soap_instantiate_ns1__AuthHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__AuthHeader::authKey = authKey; _p->ns1__AuthHeader::__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_ns1__AuthHeader(struct soap *soap, ns1__AuthHeader *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__AuthHeader(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(struct soap *soap) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary::__ptr = __ptr; _p->xsd__base64Binary::__size = __size; _p->xsd__base64Binary::id = id; _p->xsd__base64Binary::type = type; _p->xsd__base64Binary::options = options; } return _p; }

inline void soap_delete_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (105)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__UpdateQuery_
#define SOAP_TYPE___ns1__UpdateQuery_ (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdateQuery_(struct soap*, struct __ns1__UpdateQuery_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdateQuery_(struct soap*, const struct __ns1__UpdateQuery_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdateQuery_(struct soap*, const char*, int, const struct __ns1__UpdateQuery_ *, const char*);
SOAP_FMAC3 struct __ns1__UpdateQuery_ * SOAP_FMAC4 soap_in___ns1__UpdateQuery_(struct soap*, const char*, struct __ns1__UpdateQuery_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdateQuery_(struct soap*, const struct __ns1__UpdateQuery_ *, const char*, const char*);

#ifndef soap_write___ns1__UpdateQuery_
#define soap_write___ns1__UpdateQuery_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdateQuery_(soap, data), 0) || soap_put___ns1__UpdateQuery_(soap, data, "-ns1:UpdateQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdateQuery_ * SOAP_FMAC4 soap_get___ns1__UpdateQuery_(struct soap*, struct __ns1__UpdateQuery_ *, const char*, const char*);

#ifndef soap_read___ns1__UpdateQuery_
#define soap_read___ns1__UpdateQuery_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdateQuery_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdateQuery_ * SOAP_FMAC2 soap_instantiate___ns1__UpdateQuery_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdateQuery_ * soap_new___ns1__UpdateQuery_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdateQuery_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdateQuery_ * soap_new_req___ns1__UpdateQuery_(struct soap *soap) { struct __ns1__UpdateQuery_ *_p = soap_instantiate___ns1__UpdateQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateQuery_(soap, _p); } return _p; }

inline struct __ns1__UpdateQuery_ * soap_new_set___ns1__UpdateQuery_(struct soap *soap, _ns1__UpdateQuery *ns1__UpdateQuery) { struct __ns1__UpdateQuery_ *_p = soap_instantiate___ns1__UpdateQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateQuery_(soap, _p); _p->ns1__UpdateQuery = ns1__UpdateQuery; } return _p; }

inline void soap_delete___ns1__UpdateQuery_(struct soap *soap, struct __ns1__UpdateQuery_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdateQuery_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetQuery_
#define SOAP_TYPE___ns1__GetQuery_ (97)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetQuery_(struct soap*, struct __ns1__GetQuery_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetQuery_(struct soap*, const struct __ns1__GetQuery_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetQuery_(struct soap*, const char*, int, const struct __ns1__GetQuery_ *, const char*);
SOAP_FMAC3 struct __ns1__GetQuery_ * SOAP_FMAC4 soap_in___ns1__GetQuery_(struct soap*, const char*, struct __ns1__GetQuery_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetQuery_(struct soap*, const struct __ns1__GetQuery_ *, const char*, const char*);

#ifndef soap_write___ns1__GetQuery_
#define soap_write___ns1__GetQuery_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetQuery_(soap, data), 0) || soap_put___ns1__GetQuery_(soap, data, "-ns1:GetQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetQuery_ * SOAP_FMAC4 soap_get___ns1__GetQuery_(struct soap*, struct __ns1__GetQuery_ *, const char*, const char*);

#ifndef soap_read___ns1__GetQuery_
#define soap_read___ns1__GetQuery_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetQuery_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetQuery_ * SOAP_FMAC2 soap_instantiate___ns1__GetQuery_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetQuery_ * soap_new___ns1__GetQuery_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetQuery_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetQuery_ * soap_new_req___ns1__GetQuery_(struct soap *soap) { struct __ns1__GetQuery_ *_p = soap_instantiate___ns1__GetQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetQuery_(soap, _p); } return _p; }

inline struct __ns1__GetQuery_ * soap_new_set___ns1__GetQuery_(struct soap *soap, _ns1__GetQuery *ns1__GetQuery) { struct __ns1__GetQuery_ *_p = soap_instantiate___ns1__GetQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetQuery_(soap, _p); _p->ns1__GetQuery = ns1__GetQuery; } return _p; }

inline void soap_delete___ns1__GetQuery_(struct soap *soap, struct __ns1__GetQuery_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetQuery_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UploadFile_
#define SOAP_TYPE___ns1__UploadFile_ (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UploadFile_(struct soap*, struct __ns1__UploadFile_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UploadFile_(struct soap*, const struct __ns1__UploadFile_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UploadFile_(struct soap*, const char*, int, const struct __ns1__UploadFile_ *, const char*);
SOAP_FMAC3 struct __ns1__UploadFile_ * SOAP_FMAC4 soap_in___ns1__UploadFile_(struct soap*, const char*, struct __ns1__UploadFile_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UploadFile_(struct soap*, const struct __ns1__UploadFile_ *, const char*, const char*);

#ifndef soap_write___ns1__UploadFile_
#define soap_write___ns1__UploadFile_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UploadFile_(soap, data), 0) || soap_put___ns1__UploadFile_(soap, data, "-ns1:UploadFile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UploadFile_ * SOAP_FMAC4 soap_get___ns1__UploadFile_(struct soap*, struct __ns1__UploadFile_ *, const char*, const char*);

#ifndef soap_read___ns1__UploadFile_
#define soap_read___ns1__UploadFile_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UploadFile_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UploadFile_ * SOAP_FMAC2 soap_instantiate___ns1__UploadFile_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UploadFile_ * soap_new___ns1__UploadFile_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UploadFile_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UploadFile_ * soap_new_req___ns1__UploadFile_(struct soap *soap) { struct __ns1__UploadFile_ *_p = soap_instantiate___ns1__UploadFile_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadFile_(soap, _p); } return _p; }

inline struct __ns1__UploadFile_ * soap_new_set___ns1__UploadFile_(struct soap *soap, _ns1__UploadFile *ns1__UploadFile) { struct __ns1__UploadFile_ *_p = soap_instantiate___ns1__UploadFile_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadFile_(soap, _p); _p->ns1__UploadFile = ns1__UploadFile; } return _p; }

inline void soap_delete___ns1__UploadFile_(struct soap *soap, struct __ns1__UploadFile_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UploadFile_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SyncReportState_
#define SOAP_TYPE___ns1__SyncReportState_ (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SyncReportState_(struct soap*, struct __ns1__SyncReportState_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SyncReportState_(struct soap*, const struct __ns1__SyncReportState_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SyncReportState_(struct soap*, const char*, int, const struct __ns1__SyncReportState_ *, const char*);
SOAP_FMAC3 struct __ns1__SyncReportState_ * SOAP_FMAC4 soap_in___ns1__SyncReportState_(struct soap*, const char*, struct __ns1__SyncReportState_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SyncReportState_(struct soap*, const struct __ns1__SyncReportState_ *, const char*, const char*);

#ifndef soap_write___ns1__SyncReportState_
#define soap_write___ns1__SyncReportState_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SyncReportState_(soap, data), 0) || soap_put___ns1__SyncReportState_(soap, data, "-ns1:SyncReportState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SyncReportState_ * SOAP_FMAC4 soap_get___ns1__SyncReportState_(struct soap*, struct __ns1__SyncReportState_ *, const char*, const char*);

#ifndef soap_read___ns1__SyncReportState_
#define soap_read___ns1__SyncReportState_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SyncReportState_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SyncReportState_ * SOAP_FMAC2 soap_instantiate___ns1__SyncReportState_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SyncReportState_ * soap_new___ns1__SyncReportState_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SyncReportState_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SyncReportState_ * soap_new_req___ns1__SyncReportState_(struct soap *soap) { struct __ns1__SyncReportState_ *_p = soap_instantiate___ns1__SyncReportState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncReportState_(soap, _p); } return _p; }

inline struct __ns1__SyncReportState_ * soap_new_set___ns1__SyncReportState_(struct soap *soap, _ns1__SyncReportState *ns1__SyncReportState) { struct __ns1__SyncReportState_ *_p = soap_instantiate___ns1__SyncReportState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncReportState_(soap, _p); _p->ns1__SyncReportState = ns1__SyncReportState; } return _p; }

inline void soap_delete___ns1__SyncReportState_(struct soap *soap, struct __ns1__SyncReportState_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SyncReportState_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdateDataState_
#define SOAP_TYPE___ns1__UpdateDataState_ (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdateDataState_(struct soap*, struct __ns1__UpdateDataState_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdateDataState_(struct soap*, const struct __ns1__UpdateDataState_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdateDataState_(struct soap*, const char*, int, const struct __ns1__UpdateDataState_ *, const char*);
SOAP_FMAC3 struct __ns1__UpdateDataState_ * SOAP_FMAC4 soap_in___ns1__UpdateDataState_(struct soap*, const char*, struct __ns1__UpdateDataState_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdateDataState_(struct soap*, const struct __ns1__UpdateDataState_ *, const char*, const char*);

#ifndef soap_write___ns1__UpdateDataState_
#define soap_write___ns1__UpdateDataState_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdateDataState_(soap, data), 0) || soap_put___ns1__UpdateDataState_(soap, data, "-ns1:UpdateDataState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdateDataState_ * SOAP_FMAC4 soap_get___ns1__UpdateDataState_(struct soap*, struct __ns1__UpdateDataState_ *, const char*, const char*);

#ifndef soap_read___ns1__UpdateDataState_
#define soap_read___ns1__UpdateDataState_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdateDataState_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdateDataState_ * SOAP_FMAC2 soap_instantiate___ns1__UpdateDataState_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdateDataState_ * soap_new___ns1__UpdateDataState_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdateDataState_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdateDataState_ * soap_new_req___ns1__UpdateDataState_(struct soap *soap) { struct __ns1__UpdateDataState_ *_p = soap_instantiate___ns1__UpdateDataState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateDataState_(soap, _p); } return _p; }

inline struct __ns1__UpdateDataState_ * soap_new_set___ns1__UpdateDataState_(struct soap *soap, _ns1__UpdateDataState *ns1__UpdateDataState) { struct __ns1__UpdateDataState_ *_p = soap_instantiate___ns1__UpdateDataState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateDataState_(soap, _p); _p->ns1__UpdateDataState = ns1__UpdateDataState; } return _p; }

inline void soap_delete___ns1__UpdateDataState_(struct soap *soap, struct __ns1__UpdateDataState_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdateDataState_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SyncDataState_
#define SOAP_TYPE___ns1__SyncDataState_ (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SyncDataState_(struct soap*, struct __ns1__SyncDataState_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SyncDataState_(struct soap*, const struct __ns1__SyncDataState_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SyncDataState_(struct soap*, const char*, int, const struct __ns1__SyncDataState_ *, const char*);
SOAP_FMAC3 struct __ns1__SyncDataState_ * SOAP_FMAC4 soap_in___ns1__SyncDataState_(struct soap*, const char*, struct __ns1__SyncDataState_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SyncDataState_(struct soap*, const struct __ns1__SyncDataState_ *, const char*, const char*);

#ifndef soap_write___ns1__SyncDataState_
#define soap_write___ns1__SyncDataState_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SyncDataState_(soap, data), 0) || soap_put___ns1__SyncDataState_(soap, data, "-ns1:SyncDataState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SyncDataState_ * SOAP_FMAC4 soap_get___ns1__SyncDataState_(struct soap*, struct __ns1__SyncDataState_ *, const char*, const char*);

#ifndef soap_read___ns1__SyncDataState_
#define soap_read___ns1__SyncDataState_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SyncDataState_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SyncDataState_ * SOAP_FMAC2 soap_instantiate___ns1__SyncDataState_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SyncDataState_ * soap_new___ns1__SyncDataState_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SyncDataState_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SyncDataState_ * soap_new_req___ns1__SyncDataState_(struct soap *soap) { struct __ns1__SyncDataState_ *_p = soap_instantiate___ns1__SyncDataState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncDataState_(soap, _p); } return _p; }

inline struct __ns1__SyncDataState_ * soap_new_set___ns1__SyncDataState_(struct soap *soap, _ns1__SyncDataState *ns1__SyncDataState) { struct __ns1__SyncDataState_ *_p = soap_instantiate___ns1__SyncDataState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncDataState_(soap, _p); _p->ns1__SyncDataState = ns1__SyncDataState; } return _p; }

inline void soap_delete___ns1__SyncDataState_(struct soap *soap, struct __ns1__SyncDataState_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SyncDataState_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdatePatientInfo_
#define SOAP_TYPE___ns1__UpdatePatientInfo_ (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdatePatientInfo_(struct soap*, struct __ns1__UpdatePatientInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdatePatientInfo_(struct soap*, const struct __ns1__UpdatePatientInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdatePatientInfo_(struct soap*, const char*, int, const struct __ns1__UpdatePatientInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__UpdatePatientInfo_ * SOAP_FMAC4 soap_in___ns1__UpdatePatientInfo_(struct soap*, const char*, struct __ns1__UpdatePatientInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdatePatientInfo_(struct soap*, const struct __ns1__UpdatePatientInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__UpdatePatientInfo_
#define soap_write___ns1__UpdatePatientInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdatePatientInfo_(soap, data), 0) || soap_put___ns1__UpdatePatientInfo_(soap, data, "-ns1:UpdatePatientInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdatePatientInfo_ * SOAP_FMAC4 soap_get___ns1__UpdatePatientInfo_(struct soap*, struct __ns1__UpdatePatientInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__UpdatePatientInfo_
#define soap_read___ns1__UpdatePatientInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdatePatientInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdatePatientInfo_ * SOAP_FMAC2 soap_instantiate___ns1__UpdatePatientInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdatePatientInfo_ * soap_new___ns1__UpdatePatientInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdatePatientInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdatePatientInfo_ * soap_new_req___ns1__UpdatePatientInfo_(struct soap *soap) { struct __ns1__UpdatePatientInfo_ *_p = soap_instantiate___ns1__UpdatePatientInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdatePatientInfo_(soap, _p); } return _p; }

inline struct __ns1__UpdatePatientInfo_ * soap_new_set___ns1__UpdatePatientInfo_(struct soap *soap, _ns1__UpdatePatientInfo *ns1__UpdatePatientInfo) { struct __ns1__UpdatePatientInfo_ *_p = soap_instantiate___ns1__UpdatePatientInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdatePatientInfo_(soap, _p); _p->ns1__UpdatePatientInfo = ns1__UpdatePatientInfo; } return _p; }

inline void soap_delete___ns1__UpdatePatientInfo_(struct soap *soap, struct __ns1__UpdatePatientInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdatePatientInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SyncPatientInfo_
#define SOAP_TYPE___ns1__SyncPatientInfo_ (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SyncPatientInfo_(struct soap*, struct __ns1__SyncPatientInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SyncPatientInfo_(struct soap*, const struct __ns1__SyncPatientInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SyncPatientInfo_(struct soap*, const char*, int, const struct __ns1__SyncPatientInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__SyncPatientInfo_ * SOAP_FMAC4 soap_in___ns1__SyncPatientInfo_(struct soap*, const char*, struct __ns1__SyncPatientInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SyncPatientInfo_(struct soap*, const struct __ns1__SyncPatientInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__SyncPatientInfo_
#define soap_write___ns1__SyncPatientInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SyncPatientInfo_(soap, data), 0) || soap_put___ns1__SyncPatientInfo_(soap, data, "-ns1:SyncPatientInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SyncPatientInfo_ * SOAP_FMAC4 soap_get___ns1__SyncPatientInfo_(struct soap*, struct __ns1__SyncPatientInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__SyncPatientInfo_
#define soap_read___ns1__SyncPatientInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SyncPatientInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SyncPatientInfo_ * SOAP_FMAC2 soap_instantiate___ns1__SyncPatientInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SyncPatientInfo_ * soap_new___ns1__SyncPatientInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SyncPatientInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SyncPatientInfo_ * soap_new_req___ns1__SyncPatientInfo_(struct soap *soap) { struct __ns1__SyncPatientInfo_ *_p = soap_instantiate___ns1__SyncPatientInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncPatientInfo_(soap, _p); } return _p; }

inline struct __ns1__SyncPatientInfo_ * soap_new_set___ns1__SyncPatientInfo_(struct soap *soap, _ns1__SyncPatientInfo *ns1__SyncPatientInfo) { struct __ns1__SyncPatientInfo_ *_p = soap_instantiate___ns1__SyncPatientInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncPatientInfo_(soap, _p); _p->ns1__SyncPatientInfo = ns1__SyncPatientInfo; } return _p; }

inline void soap_delete___ns1__SyncPatientInfo_(struct soap *soap, struct __ns1__SyncPatientInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SyncPatientInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Login_
#define SOAP_TYPE___ns1__Login_ (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Login_(struct soap*, struct __ns1__Login_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Login_(struct soap*, const struct __ns1__Login_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Login_(struct soap*, const char*, int, const struct __ns1__Login_ *, const char*);
SOAP_FMAC3 struct __ns1__Login_ * SOAP_FMAC4 soap_in___ns1__Login_(struct soap*, const char*, struct __ns1__Login_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Login_(struct soap*, const struct __ns1__Login_ *, const char*, const char*);

#ifndef soap_write___ns1__Login_
#define soap_write___ns1__Login_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Login_(soap, data), 0) || soap_put___ns1__Login_(soap, data, "-ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Login_ * SOAP_FMAC4 soap_get___ns1__Login_(struct soap*, struct __ns1__Login_ *, const char*, const char*);

#ifndef soap_read___ns1__Login_
#define soap_read___ns1__Login_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Login_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Login_ * SOAP_FMAC2 soap_instantiate___ns1__Login_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Login_ * soap_new___ns1__Login_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Login_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Login_ * soap_new_req___ns1__Login_(struct soap *soap) { struct __ns1__Login_ *_p = soap_instantiate___ns1__Login_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login_(soap, _p); } return _p; }

inline struct __ns1__Login_ * soap_new_set___ns1__Login_(struct soap *soap, _ns1__Login *ns1__Login) { struct __ns1__Login_ *_p = soap_instantiate___ns1__Login_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login_(soap, _p); _p->ns1__Login = ns1__Login; } return _p; }

inline void soap_delete___ns1__Login_(struct soap *soap, struct __ns1__Login_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Login_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetReportState_
#define SOAP_TYPE___ns1__GetReportState_ (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetReportState_(struct soap*, struct __ns1__GetReportState_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetReportState_(struct soap*, const struct __ns1__GetReportState_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetReportState_(struct soap*, const char*, int, const struct __ns1__GetReportState_ *, const char*);
SOAP_FMAC3 struct __ns1__GetReportState_ * SOAP_FMAC4 soap_in___ns1__GetReportState_(struct soap*, const char*, struct __ns1__GetReportState_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetReportState_(struct soap*, const struct __ns1__GetReportState_ *, const char*, const char*);

#ifndef soap_write___ns1__GetReportState_
#define soap_write___ns1__GetReportState_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetReportState_(soap, data), 0) || soap_put___ns1__GetReportState_(soap, data, "-ns1:GetReportState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetReportState_ * SOAP_FMAC4 soap_get___ns1__GetReportState_(struct soap*, struct __ns1__GetReportState_ *, const char*, const char*);

#ifndef soap_read___ns1__GetReportState_
#define soap_read___ns1__GetReportState_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetReportState_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetReportState_ * SOAP_FMAC2 soap_instantiate___ns1__GetReportState_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetReportState_ * soap_new___ns1__GetReportState_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetReportState_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetReportState_ * soap_new_req___ns1__GetReportState_(struct soap *soap) { struct __ns1__GetReportState_ *_p = soap_instantiate___ns1__GetReportState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetReportState_(soap, _p); } return _p; }

inline struct __ns1__GetReportState_ * soap_new_set___ns1__GetReportState_(struct soap *soap, _ns1__GetReportState *ns1__GetReportState) { struct __ns1__GetReportState_ *_p = soap_instantiate___ns1__GetReportState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetReportState_(soap, _p); _p->ns1__GetReportState = ns1__GetReportState; } return _p; }

inline void soap_delete___ns1__GetReportState_(struct soap *soap, struct __ns1__GetReportState_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetReportState_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdateQuery
#define SOAP_TYPE___ns1__UpdateQuery (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdateQuery(struct soap*, struct __ns1__UpdateQuery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdateQuery(struct soap*, const struct __ns1__UpdateQuery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdateQuery(struct soap*, const char*, int, const struct __ns1__UpdateQuery *, const char*);
SOAP_FMAC3 struct __ns1__UpdateQuery * SOAP_FMAC4 soap_in___ns1__UpdateQuery(struct soap*, const char*, struct __ns1__UpdateQuery *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdateQuery(struct soap*, const struct __ns1__UpdateQuery *, const char*, const char*);

#ifndef soap_write___ns1__UpdateQuery
#define soap_write___ns1__UpdateQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdateQuery(soap, data), 0) || soap_put___ns1__UpdateQuery(soap, data, "-ns1:UpdateQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdateQuery * SOAP_FMAC4 soap_get___ns1__UpdateQuery(struct soap*, struct __ns1__UpdateQuery *, const char*, const char*);

#ifndef soap_read___ns1__UpdateQuery
#define soap_read___ns1__UpdateQuery(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdateQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdateQuery * SOAP_FMAC2 soap_instantiate___ns1__UpdateQuery(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdateQuery * soap_new___ns1__UpdateQuery(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdateQuery(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdateQuery * soap_new_req___ns1__UpdateQuery(struct soap *soap) { struct __ns1__UpdateQuery *_p = soap_instantiate___ns1__UpdateQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateQuery(soap, _p); } return _p; }

inline struct __ns1__UpdateQuery * soap_new_set___ns1__UpdateQuery(struct soap *soap, _ns1__UpdateQuery *ns1__UpdateQuery) { struct __ns1__UpdateQuery *_p = soap_instantiate___ns1__UpdateQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateQuery(soap, _p); _p->ns1__UpdateQuery = ns1__UpdateQuery; } return _p; }

inline void soap_delete___ns1__UpdateQuery(struct soap *soap, struct __ns1__UpdateQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdateQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetQuery
#define SOAP_TYPE___ns1__GetQuery (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetQuery(struct soap*, struct __ns1__GetQuery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetQuery(struct soap*, const struct __ns1__GetQuery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetQuery(struct soap*, const char*, int, const struct __ns1__GetQuery *, const char*);
SOAP_FMAC3 struct __ns1__GetQuery * SOAP_FMAC4 soap_in___ns1__GetQuery(struct soap*, const char*, struct __ns1__GetQuery *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetQuery(struct soap*, const struct __ns1__GetQuery *, const char*, const char*);

#ifndef soap_write___ns1__GetQuery
#define soap_write___ns1__GetQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetQuery(soap, data), 0) || soap_put___ns1__GetQuery(soap, data, "-ns1:GetQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetQuery * SOAP_FMAC4 soap_get___ns1__GetQuery(struct soap*, struct __ns1__GetQuery *, const char*, const char*);

#ifndef soap_read___ns1__GetQuery
#define soap_read___ns1__GetQuery(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetQuery * SOAP_FMAC2 soap_instantiate___ns1__GetQuery(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetQuery * soap_new___ns1__GetQuery(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetQuery(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetQuery * soap_new_req___ns1__GetQuery(struct soap *soap) { struct __ns1__GetQuery *_p = soap_instantiate___ns1__GetQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetQuery(soap, _p); } return _p; }

inline struct __ns1__GetQuery * soap_new_set___ns1__GetQuery(struct soap *soap, _ns1__GetQuery *ns1__GetQuery) { struct __ns1__GetQuery *_p = soap_instantiate___ns1__GetQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetQuery(soap, _p); _p->ns1__GetQuery = ns1__GetQuery; } return _p; }

inline void soap_delete___ns1__GetQuery(struct soap *soap, struct __ns1__GetQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UploadFile
#define SOAP_TYPE___ns1__UploadFile (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UploadFile(struct soap*, struct __ns1__UploadFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UploadFile(struct soap*, const struct __ns1__UploadFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UploadFile(struct soap*, const char*, int, const struct __ns1__UploadFile *, const char*);
SOAP_FMAC3 struct __ns1__UploadFile * SOAP_FMAC4 soap_in___ns1__UploadFile(struct soap*, const char*, struct __ns1__UploadFile *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UploadFile(struct soap*, const struct __ns1__UploadFile *, const char*, const char*);

#ifndef soap_write___ns1__UploadFile
#define soap_write___ns1__UploadFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UploadFile(soap, data), 0) || soap_put___ns1__UploadFile(soap, data, "-ns1:UploadFile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UploadFile * SOAP_FMAC4 soap_get___ns1__UploadFile(struct soap*, struct __ns1__UploadFile *, const char*, const char*);

#ifndef soap_read___ns1__UploadFile
#define soap_read___ns1__UploadFile(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UploadFile(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UploadFile * SOAP_FMAC2 soap_instantiate___ns1__UploadFile(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UploadFile * soap_new___ns1__UploadFile(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UploadFile(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UploadFile * soap_new_req___ns1__UploadFile(struct soap *soap) { struct __ns1__UploadFile *_p = soap_instantiate___ns1__UploadFile(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadFile(soap, _p); } return _p; }

inline struct __ns1__UploadFile * soap_new_set___ns1__UploadFile(struct soap *soap, _ns1__UploadFile *ns1__UploadFile) { struct __ns1__UploadFile *_p = soap_instantiate___ns1__UploadFile(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadFile(soap, _p); _p->ns1__UploadFile = ns1__UploadFile; } return _p; }

inline void soap_delete___ns1__UploadFile(struct soap *soap, struct __ns1__UploadFile *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UploadFile(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SyncReportState
#define SOAP_TYPE___ns1__SyncReportState (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SyncReportState(struct soap*, struct __ns1__SyncReportState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SyncReportState(struct soap*, const struct __ns1__SyncReportState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SyncReportState(struct soap*, const char*, int, const struct __ns1__SyncReportState *, const char*);
SOAP_FMAC3 struct __ns1__SyncReportState * SOAP_FMAC4 soap_in___ns1__SyncReportState(struct soap*, const char*, struct __ns1__SyncReportState *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SyncReportState(struct soap*, const struct __ns1__SyncReportState *, const char*, const char*);

#ifndef soap_write___ns1__SyncReportState
#define soap_write___ns1__SyncReportState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SyncReportState(soap, data), 0) || soap_put___ns1__SyncReportState(soap, data, "-ns1:SyncReportState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SyncReportState * SOAP_FMAC4 soap_get___ns1__SyncReportState(struct soap*, struct __ns1__SyncReportState *, const char*, const char*);

#ifndef soap_read___ns1__SyncReportState
#define soap_read___ns1__SyncReportState(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SyncReportState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SyncReportState * SOAP_FMAC2 soap_instantiate___ns1__SyncReportState(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SyncReportState * soap_new___ns1__SyncReportState(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SyncReportState(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SyncReportState * soap_new_req___ns1__SyncReportState(struct soap *soap) { struct __ns1__SyncReportState *_p = soap_instantiate___ns1__SyncReportState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncReportState(soap, _p); } return _p; }

inline struct __ns1__SyncReportState * soap_new_set___ns1__SyncReportState(struct soap *soap, _ns1__SyncReportState *ns1__SyncReportState) { struct __ns1__SyncReportState *_p = soap_instantiate___ns1__SyncReportState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncReportState(soap, _p); _p->ns1__SyncReportState = ns1__SyncReportState; } return _p; }

inline void soap_delete___ns1__SyncReportState(struct soap *soap, struct __ns1__SyncReportState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SyncReportState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdateDataState
#define SOAP_TYPE___ns1__UpdateDataState (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdateDataState(struct soap*, struct __ns1__UpdateDataState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdateDataState(struct soap*, const struct __ns1__UpdateDataState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdateDataState(struct soap*, const char*, int, const struct __ns1__UpdateDataState *, const char*);
SOAP_FMAC3 struct __ns1__UpdateDataState * SOAP_FMAC4 soap_in___ns1__UpdateDataState(struct soap*, const char*, struct __ns1__UpdateDataState *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdateDataState(struct soap*, const struct __ns1__UpdateDataState *, const char*, const char*);

#ifndef soap_write___ns1__UpdateDataState
#define soap_write___ns1__UpdateDataState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdateDataState(soap, data), 0) || soap_put___ns1__UpdateDataState(soap, data, "-ns1:UpdateDataState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdateDataState * SOAP_FMAC4 soap_get___ns1__UpdateDataState(struct soap*, struct __ns1__UpdateDataState *, const char*, const char*);

#ifndef soap_read___ns1__UpdateDataState
#define soap_read___ns1__UpdateDataState(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdateDataState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdateDataState * SOAP_FMAC2 soap_instantiate___ns1__UpdateDataState(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdateDataState * soap_new___ns1__UpdateDataState(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdateDataState(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdateDataState * soap_new_req___ns1__UpdateDataState(struct soap *soap) { struct __ns1__UpdateDataState *_p = soap_instantiate___ns1__UpdateDataState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateDataState(soap, _p); } return _p; }

inline struct __ns1__UpdateDataState * soap_new_set___ns1__UpdateDataState(struct soap *soap, _ns1__UpdateDataState *ns1__UpdateDataState) { struct __ns1__UpdateDataState *_p = soap_instantiate___ns1__UpdateDataState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateDataState(soap, _p); _p->ns1__UpdateDataState = ns1__UpdateDataState; } return _p; }

inline void soap_delete___ns1__UpdateDataState(struct soap *soap, struct __ns1__UpdateDataState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdateDataState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SyncDataState
#define SOAP_TYPE___ns1__SyncDataState (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SyncDataState(struct soap*, struct __ns1__SyncDataState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SyncDataState(struct soap*, const struct __ns1__SyncDataState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SyncDataState(struct soap*, const char*, int, const struct __ns1__SyncDataState *, const char*);
SOAP_FMAC3 struct __ns1__SyncDataState * SOAP_FMAC4 soap_in___ns1__SyncDataState(struct soap*, const char*, struct __ns1__SyncDataState *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SyncDataState(struct soap*, const struct __ns1__SyncDataState *, const char*, const char*);

#ifndef soap_write___ns1__SyncDataState
#define soap_write___ns1__SyncDataState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SyncDataState(soap, data), 0) || soap_put___ns1__SyncDataState(soap, data, "-ns1:SyncDataState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SyncDataState * SOAP_FMAC4 soap_get___ns1__SyncDataState(struct soap*, struct __ns1__SyncDataState *, const char*, const char*);

#ifndef soap_read___ns1__SyncDataState
#define soap_read___ns1__SyncDataState(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SyncDataState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SyncDataState * SOAP_FMAC2 soap_instantiate___ns1__SyncDataState(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SyncDataState * soap_new___ns1__SyncDataState(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SyncDataState(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SyncDataState * soap_new_req___ns1__SyncDataState(struct soap *soap) { struct __ns1__SyncDataState *_p = soap_instantiate___ns1__SyncDataState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncDataState(soap, _p); } return _p; }

inline struct __ns1__SyncDataState * soap_new_set___ns1__SyncDataState(struct soap *soap, _ns1__SyncDataState *ns1__SyncDataState) { struct __ns1__SyncDataState *_p = soap_instantiate___ns1__SyncDataState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncDataState(soap, _p); _p->ns1__SyncDataState = ns1__SyncDataState; } return _p; }

inline void soap_delete___ns1__SyncDataState(struct soap *soap, struct __ns1__SyncDataState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SyncDataState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdatePatientInfo
#define SOAP_TYPE___ns1__UpdatePatientInfo (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdatePatientInfo(struct soap*, struct __ns1__UpdatePatientInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdatePatientInfo(struct soap*, const struct __ns1__UpdatePatientInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdatePatientInfo(struct soap*, const char*, int, const struct __ns1__UpdatePatientInfo *, const char*);
SOAP_FMAC3 struct __ns1__UpdatePatientInfo * SOAP_FMAC4 soap_in___ns1__UpdatePatientInfo(struct soap*, const char*, struct __ns1__UpdatePatientInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdatePatientInfo(struct soap*, const struct __ns1__UpdatePatientInfo *, const char*, const char*);

#ifndef soap_write___ns1__UpdatePatientInfo
#define soap_write___ns1__UpdatePatientInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdatePatientInfo(soap, data), 0) || soap_put___ns1__UpdatePatientInfo(soap, data, "-ns1:UpdatePatientInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdatePatientInfo * SOAP_FMAC4 soap_get___ns1__UpdatePatientInfo(struct soap*, struct __ns1__UpdatePatientInfo *, const char*, const char*);

#ifndef soap_read___ns1__UpdatePatientInfo
#define soap_read___ns1__UpdatePatientInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdatePatientInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdatePatientInfo * SOAP_FMAC2 soap_instantiate___ns1__UpdatePatientInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdatePatientInfo * soap_new___ns1__UpdatePatientInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdatePatientInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdatePatientInfo * soap_new_req___ns1__UpdatePatientInfo(struct soap *soap) { struct __ns1__UpdatePatientInfo *_p = soap_instantiate___ns1__UpdatePatientInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdatePatientInfo(soap, _p); } return _p; }

inline struct __ns1__UpdatePatientInfo * soap_new_set___ns1__UpdatePatientInfo(struct soap *soap, _ns1__UpdatePatientInfo *ns1__UpdatePatientInfo) { struct __ns1__UpdatePatientInfo *_p = soap_instantiate___ns1__UpdatePatientInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdatePatientInfo(soap, _p); _p->ns1__UpdatePatientInfo = ns1__UpdatePatientInfo; } return _p; }

inline void soap_delete___ns1__UpdatePatientInfo(struct soap *soap, struct __ns1__UpdatePatientInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdatePatientInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SyncPatientInfo
#define SOAP_TYPE___ns1__SyncPatientInfo (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SyncPatientInfo(struct soap*, struct __ns1__SyncPatientInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SyncPatientInfo(struct soap*, const struct __ns1__SyncPatientInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SyncPatientInfo(struct soap*, const char*, int, const struct __ns1__SyncPatientInfo *, const char*);
SOAP_FMAC3 struct __ns1__SyncPatientInfo * SOAP_FMAC4 soap_in___ns1__SyncPatientInfo(struct soap*, const char*, struct __ns1__SyncPatientInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SyncPatientInfo(struct soap*, const struct __ns1__SyncPatientInfo *, const char*, const char*);

#ifndef soap_write___ns1__SyncPatientInfo
#define soap_write___ns1__SyncPatientInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SyncPatientInfo(soap, data), 0) || soap_put___ns1__SyncPatientInfo(soap, data, "-ns1:SyncPatientInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SyncPatientInfo * SOAP_FMAC4 soap_get___ns1__SyncPatientInfo(struct soap*, struct __ns1__SyncPatientInfo *, const char*, const char*);

#ifndef soap_read___ns1__SyncPatientInfo
#define soap_read___ns1__SyncPatientInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SyncPatientInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SyncPatientInfo * SOAP_FMAC2 soap_instantiate___ns1__SyncPatientInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SyncPatientInfo * soap_new___ns1__SyncPatientInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SyncPatientInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SyncPatientInfo * soap_new_req___ns1__SyncPatientInfo(struct soap *soap) { struct __ns1__SyncPatientInfo *_p = soap_instantiate___ns1__SyncPatientInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncPatientInfo(soap, _p); } return _p; }

inline struct __ns1__SyncPatientInfo * soap_new_set___ns1__SyncPatientInfo(struct soap *soap, _ns1__SyncPatientInfo *ns1__SyncPatientInfo) { struct __ns1__SyncPatientInfo *_p = soap_instantiate___ns1__SyncPatientInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SyncPatientInfo(soap, _p); _p->ns1__SyncPatientInfo = ns1__SyncPatientInfo; } return _p; }

inline void soap_delete___ns1__SyncPatientInfo(struct soap *soap, struct __ns1__SyncPatientInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SyncPatientInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Login
#define SOAP_TYPE___ns1__Login (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Login(struct soap*, struct __ns1__Login *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Login(struct soap*, const struct __ns1__Login *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Login(struct soap*, const char*, int, const struct __ns1__Login *, const char*);
SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_in___ns1__Login(struct soap*, const char*, struct __ns1__Login *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Login(struct soap*, const struct __ns1__Login *, const char*, const char*);

#ifndef soap_write___ns1__Login
#define soap_write___ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Login(soap, data), 0) || soap_put___ns1__Login(soap, data, "-ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_get___ns1__Login(struct soap*, struct __ns1__Login *, const char*, const char*);

#ifndef soap_read___ns1__Login
#define soap_read___ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Login * SOAP_FMAC2 soap_instantiate___ns1__Login(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Login * soap_new___ns1__Login(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Login(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Login * soap_new_req___ns1__Login(struct soap *soap) { struct __ns1__Login *_p = soap_instantiate___ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login(soap, _p); } return _p; }

inline struct __ns1__Login * soap_new_set___ns1__Login(struct soap *soap, _ns1__Login *ns1__Login) { struct __ns1__Login *_p = soap_instantiate___ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login(soap, _p); _p->ns1__Login = ns1__Login; } return _p; }

inline void soap_delete___ns1__Login(struct soap *soap, struct __ns1__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetReportState
#define SOAP_TYPE___ns1__GetReportState (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetReportState(struct soap*, struct __ns1__GetReportState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetReportState(struct soap*, const struct __ns1__GetReportState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetReportState(struct soap*, const char*, int, const struct __ns1__GetReportState *, const char*);
SOAP_FMAC3 struct __ns1__GetReportState * SOAP_FMAC4 soap_in___ns1__GetReportState(struct soap*, const char*, struct __ns1__GetReportState *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetReportState(struct soap*, const struct __ns1__GetReportState *, const char*, const char*);

#ifndef soap_write___ns1__GetReportState
#define soap_write___ns1__GetReportState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetReportState(soap, data), 0) || soap_put___ns1__GetReportState(soap, data, "-ns1:GetReportState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetReportState * SOAP_FMAC4 soap_get___ns1__GetReportState(struct soap*, struct __ns1__GetReportState *, const char*, const char*);

#ifndef soap_read___ns1__GetReportState
#define soap_read___ns1__GetReportState(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetReportState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetReportState * SOAP_FMAC2 soap_instantiate___ns1__GetReportState(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetReportState * soap_new___ns1__GetReportState(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetReportState(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetReportState * soap_new_req___ns1__GetReportState(struct soap *soap) { struct __ns1__GetReportState *_p = soap_instantiate___ns1__GetReportState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetReportState(soap, _p); } return _p; }

inline struct __ns1__GetReportState * soap_new_set___ns1__GetReportState(struct soap *soap, _ns1__GetReportState *ns1__GetReportState) { struct __ns1__GetReportState *_p = soap_instantiate___ns1__GetReportState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetReportState(soap, _p); _p->ns1__GetReportState = ns1__GetReportState; } return _p; }

inline void soap_delete___ns1__GetReportState(struct soap *soap, struct __ns1__GetReportState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetReportState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap, ns1__AuthHeader *ns1__AuthHeader_) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); _p->ns1__AuthHeader_ = ns1__AuthHeader_; } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__UpdateQuery
#define SOAP_TYPE_PointerTo_ns1__UpdateQuery (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdateQuery(struct soap*, _ns1__UpdateQuery *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdateQuery(struct soap*, const char *, int, _ns1__UpdateQuery *const*, const char *);
SOAP_FMAC3 _ns1__UpdateQuery ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdateQuery(struct soap*, const char*, _ns1__UpdateQuery **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdateQuery(struct soap*, _ns1__UpdateQuery *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UpdateQuery
#define soap_write_PointerTo_ns1__UpdateQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UpdateQuery(soap, data), 0) || soap_put_PointerTo_ns1__UpdateQuery(soap, data, "ns1:UpdateQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateQuery ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdateQuery(struct soap*, _ns1__UpdateQuery **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UpdateQuery
#define soap_read_PointerTo_ns1__UpdateQuery(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UpdateQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetQuery
#define SOAP_TYPE_PointerTo_ns1__GetQuery (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetQuery(struct soap*, _ns1__GetQuery *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetQuery(struct soap*, const char *, int, _ns1__GetQuery *const*, const char *);
SOAP_FMAC3 _ns1__GetQuery ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetQuery(struct soap*, const char*, _ns1__GetQuery **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetQuery(struct soap*, _ns1__GetQuery *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetQuery
#define soap_write_PointerTo_ns1__GetQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetQuery(soap, data), 0) || soap_put_PointerTo_ns1__GetQuery(soap, data, "ns1:GetQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetQuery ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetQuery(struct soap*, _ns1__GetQuery **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetQuery
#define soap_read_PointerTo_ns1__GetQuery(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UploadFile
#define SOAP_TYPE_PointerTo_ns1__UploadFile (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UploadFile(struct soap*, _ns1__UploadFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UploadFile(struct soap*, const char *, int, _ns1__UploadFile *const*, const char *);
SOAP_FMAC3 _ns1__UploadFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__UploadFile(struct soap*, const char*, _ns1__UploadFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UploadFile(struct soap*, _ns1__UploadFile *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UploadFile
#define soap_write_PointerTo_ns1__UploadFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UploadFile(soap, data), 0) || soap_put_PointerTo_ns1__UploadFile(soap, data, "ns1:UploadFile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UploadFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__UploadFile(struct soap*, _ns1__UploadFile **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UploadFile
#define soap_read_PointerTo_ns1__UploadFile(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UploadFile(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SyncReportState
#define SOAP_TYPE_PointerTo_ns1__SyncReportState (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SyncReportState(struct soap*, _ns1__SyncReportState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SyncReportState(struct soap*, const char *, int, _ns1__SyncReportState *const*, const char *);
SOAP_FMAC3 _ns1__SyncReportState ** SOAP_FMAC4 soap_in_PointerTo_ns1__SyncReportState(struct soap*, const char*, _ns1__SyncReportState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SyncReportState(struct soap*, _ns1__SyncReportState *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SyncReportState
#define soap_write_PointerTo_ns1__SyncReportState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SyncReportState(soap, data), 0) || soap_put_PointerTo_ns1__SyncReportState(soap, data, "ns1:SyncReportState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SyncReportState ** SOAP_FMAC4 soap_get_PointerTo_ns1__SyncReportState(struct soap*, _ns1__SyncReportState **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SyncReportState
#define soap_read_PointerTo_ns1__SyncReportState(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SyncReportState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UpdateDataState
#define SOAP_TYPE_PointerTo_ns1__UpdateDataState (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdateDataState(struct soap*, _ns1__UpdateDataState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdateDataState(struct soap*, const char *, int, _ns1__UpdateDataState *const*, const char *);
SOAP_FMAC3 _ns1__UpdateDataState ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdateDataState(struct soap*, const char*, _ns1__UpdateDataState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdateDataState(struct soap*, _ns1__UpdateDataState *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UpdateDataState
#define soap_write_PointerTo_ns1__UpdateDataState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UpdateDataState(soap, data), 0) || soap_put_PointerTo_ns1__UpdateDataState(soap, data, "ns1:UpdateDataState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateDataState ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdateDataState(struct soap*, _ns1__UpdateDataState **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UpdateDataState
#define soap_read_PointerTo_ns1__UpdateDataState(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UpdateDataState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SyncDataState
#define SOAP_TYPE_PointerTo_ns1__SyncDataState (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SyncDataState(struct soap*, _ns1__SyncDataState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SyncDataState(struct soap*, const char *, int, _ns1__SyncDataState *const*, const char *);
SOAP_FMAC3 _ns1__SyncDataState ** SOAP_FMAC4 soap_in_PointerTo_ns1__SyncDataState(struct soap*, const char*, _ns1__SyncDataState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SyncDataState(struct soap*, _ns1__SyncDataState *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SyncDataState
#define soap_write_PointerTo_ns1__SyncDataState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SyncDataState(soap, data), 0) || soap_put_PointerTo_ns1__SyncDataState(soap, data, "ns1:SyncDataState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SyncDataState ** SOAP_FMAC4 soap_get_PointerTo_ns1__SyncDataState(struct soap*, _ns1__SyncDataState **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SyncDataState
#define soap_read_PointerTo_ns1__SyncDataState(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SyncDataState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UpdatePatientInfo
#define SOAP_TYPE_PointerTo_ns1__UpdatePatientInfo (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdatePatientInfo(struct soap*, _ns1__UpdatePatientInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdatePatientInfo(struct soap*, const char *, int, _ns1__UpdatePatientInfo *const*, const char *);
SOAP_FMAC3 _ns1__UpdatePatientInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdatePatientInfo(struct soap*, const char*, _ns1__UpdatePatientInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdatePatientInfo(struct soap*, _ns1__UpdatePatientInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UpdatePatientInfo
#define soap_write_PointerTo_ns1__UpdatePatientInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UpdatePatientInfo(soap, data), 0) || soap_put_PointerTo_ns1__UpdatePatientInfo(soap, data, "ns1:UpdatePatientInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdatePatientInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdatePatientInfo(struct soap*, _ns1__UpdatePatientInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UpdatePatientInfo
#define soap_read_PointerTo_ns1__UpdatePatientInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UpdatePatientInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SyncPatientInfo
#define SOAP_TYPE_PointerTo_ns1__SyncPatientInfo (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SyncPatientInfo(struct soap*, _ns1__SyncPatientInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SyncPatientInfo(struct soap*, const char *, int, _ns1__SyncPatientInfo *const*, const char *);
SOAP_FMAC3 _ns1__SyncPatientInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__SyncPatientInfo(struct soap*, const char*, _ns1__SyncPatientInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SyncPatientInfo(struct soap*, _ns1__SyncPatientInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SyncPatientInfo
#define soap_write_PointerTo_ns1__SyncPatientInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SyncPatientInfo(soap, data), 0) || soap_put_PointerTo_ns1__SyncPatientInfo(soap, data, "ns1:SyncPatientInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SyncPatientInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__SyncPatientInfo(struct soap*, _ns1__SyncPatientInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SyncPatientInfo
#define soap_read_PointerTo_ns1__SyncPatientInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SyncPatientInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Login
#define SOAP_TYPE_PointerTo_ns1__Login (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Login(struct soap*, _ns1__Login *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Login(struct soap*, const char *, int, _ns1__Login *const*, const char *);
SOAP_FMAC3 _ns1__Login ** SOAP_FMAC4 soap_in_PointerTo_ns1__Login(struct soap*, const char*, _ns1__Login **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Login(struct soap*, _ns1__Login *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Login
#define soap_write_PointerTo_ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__Login(soap, data), 0) || soap_put_PointerTo_ns1__Login(soap, data, "ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Login ** SOAP_FMAC4 soap_get_PointerTo_ns1__Login(struct soap*, _ns1__Login **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Login
#define soap_read_PointerTo_ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetReportState
#define SOAP_TYPE_PointerTo_ns1__GetReportState (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetReportState(struct soap*, _ns1__GetReportState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetReportState(struct soap*, const char *, int, _ns1__GetReportState *const*, const char *);
SOAP_FMAC3 _ns1__GetReportState ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetReportState(struct soap*, const char*, _ns1__GetReportState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetReportState(struct soap*, _ns1__GetReportState *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetReportState
#define soap_write_PointerTo_ns1__GetReportState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetReportState(soap, data), 0) || soap_put_PointerTo_ns1__GetReportState(soap, data, "ns1:GetReportState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetReportState ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetReportState(struct soap*, _ns1__GetReportState **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetReportState
#define soap_read_PointerTo_ns1__GetReportState(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetReportState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__AuthHeader
#define SOAP_TYPE_PointerTons1__AuthHeader (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__AuthHeader(struct soap*, ns1__AuthHeader *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__AuthHeader(struct soap*, const char *, int, ns1__AuthHeader *const*, const char *);
SOAP_FMAC3 ns1__AuthHeader ** SOAP_FMAC4 soap_in_PointerTons1__AuthHeader(struct soap*, const char*, ns1__AuthHeader **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__AuthHeader(struct soap*, ns1__AuthHeader *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__AuthHeader
#define soap_write_PointerTons1__AuthHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__AuthHeader(soap, data), 0) || soap_put_PointerTons1__AuthHeader(soap, data, "ns1:AuthHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__AuthHeader ** SOAP_FMAC4 soap_get_PointerTons1__AuthHeader(struct soap*, ns1__AuthHeader **, const char*, const char*);

#ifndef soap_read_PointerTons1__AuthHeader
#define soap_read_PointerTons1__AuthHeader(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__AuthHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetQueryResponse_GetQueryResult
#define SOAP_TYPE_PointerTo_ns1__GetQueryResponse_GetQueryResult (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetQueryResponse_GetQueryResult(struct soap*, _ns1__GetQueryResponse_GetQueryResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetQueryResponse_GetQueryResult(struct soap*, const char *, int, _ns1__GetQueryResponse_GetQueryResult *const*, const char *);
SOAP_FMAC3 _ns1__GetQueryResponse_GetQueryResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetQueryResponse_GetQueryResult(struct soap*, const char*, _ns1__GetQueryResponse_GetQueryResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetQueryResponse_GetQueryResult(struct soap*, _ns1__GetQueryResponse_GetQueryResult *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetQueryResponse_GetQueryResult
#define soap_write_PointerTo_ns1__GetQueryResponse_GetQueryResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetQueryResponse_GetQueryResult(soap, data), 0) || soap_put_PointerTo_ns1__GetQueryResponse_GetQueryResult(soap, data, "ns1:GetQueryResponse-GetQueryResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetQueryResponse_GetQueryResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetQueryResponse_GetQueryResult(struct soap*, _ns1__GetQueryResponse_GetQueryResult **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetQueryResponse_GetQueryResult
#define soap_read_PointerTo_ns1__GetQueryResponse_GetQueryResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetQueryResponse_GetQueryResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__base64Binary
#define SOAP_TYPE_PointerToxsd__base64Binary (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__base64Binary(struct soap*, const char *, int, xsd__base64Binary *const*, const char *);
SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_in_PointerToxsd__base64Binary(struct soap*, const char*, xsd__base64Binary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__base64Binary
#define soap_write_PointerToxsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__base64Binary(soap, data), 0) || soap_put_PointerToxsd__base64Binary(soap, data, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_get_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary **, const char*, const char*);

#ifndef soap_read_PointerToxsd__base64Binary
#define soap_read_PointerToxsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetReportStateResponse_GetReportStateResult
#define SOAP_TYPE_PointerTo_ns1__GetReportStateResponse_GetReportStateResult (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(struct soap*, _ns1__GetReportStateResponse_GetReportStateResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(struct soap*, const char *, int, _ns1__GetReportStateResponse_GetReportStateResult *const*, const char *);
SOAP_FMAC3 _ns1__GetReportStateResponse_GetReportStateResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(struct soap*, const char*, _ns1__GetReportStateResponse_GetReportStateResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(struct soap*, _ns1__GetReportStateResponse_GetReportStateResult *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetReportStateResponse_GetReportStateResult
#define soap_write_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(soap, data), 0) || soap_put_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(soap, data, "ns1:GetReportStateResponse-GetReportStateResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetReportStateResponse_GetReportStateResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(struct soap*, _ns1__GetReportStateResponse_GetReportStateResult **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetReportStateResponse_GetReportStateResult
#define soap_read_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetReportStateResponse_GetReportStateResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data), 0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
