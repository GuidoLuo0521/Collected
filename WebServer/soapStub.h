/* soapStub.h
   Generated by gSOAP 2.8.23 from clientservice.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://StaticECG.koanruler.com/"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20823
# error "GSOAP VERSION 20823 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique type id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() { xsd__base64Binary::soap_default(NULL); }
	virtual ~xsd__base64Binary() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AuthHeader
#define SOAP_TYPE_ns1__AuthHeader (12)
/* ns1:AuthHeader */
class SOAP_CMAC ns1__AuthHeader
{
public:
	char *authKey;	/* optional element of type xsd:string */
	char *__anyAttribute;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique type id SOAP_TYPE_ns1__AuthHeader */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AuthHeader() { ns1__AuthHeader::soap_default(NULL); }
	virtual ~ns1__AuthHeader() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReportState
#define SOAP_TYPE__ns1__GetReportState (13)
/* ns1:GetReportState */
class SOAP_CMAC _ns1__GetReportState
{
public:
	char *sFileName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique type id SOAP_TYPE__ns1__GetReportState */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReportState() { _ns1__GetReportState::soap_default(NULL); }
	virtual ~_ns1__GetReportState() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReportStateResponse_GetReportStateResult
#define SOAP_TYPE__ns1__GetReportStateResponse_GetReportStateResult (33)
/* ns1:GetReportStateResponse-GetReportStateResult */
class SOAP_CMAC _ns1__GetReportStateResponse_GetReportStateResult
{
public:
	char *__any;
	char *__mixed;
public:
	virtual int soap_type() const { return 33; } /* = unique type id SOAP_TYPE__ns1__GetReportStateResponse_GetReportStateResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReportStateResponse_GetReportStateResult() { _ns1__GetReportStateResponse_GetReportStateResult::soap_default(NULL); }
	virtual ~_ns1__GetReportStateResponse_GetReportStateResult() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReportStateResponse
#define SOAP_TYPE__ns1__GetReportStateResponse (14)
/* ns1:GetReportStateResponse */
class SOAP_CMAC _ns1__GetReportStateResponse
{
public:
	_ns1__GetReportStateResponse_GetReportStateResult *GetReportStateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:GetReportStateResponse-GetReportStateResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique type id SOAP_TYPE__ns1__GetReportStateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReportStateResponse() { _ns1__GetReportStateResponse::soap_default(NULL); }
	virtual ~_ns1__GetReportStateResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__Login
#define SOAP_TYPE__ns1__Login (15)
/* ns1:Login */
class SOAP_CMAC _ns1__Login
{
public:
	char *sAccount;	/* optional element of type xsd:string */
	char *sPassword;	/* optional element of type xsd:string */
	char *softdtmpad;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique type id SOAP_TYPE__ns1__Login */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__Login() { _ns1__Login::soap_default(NULL); }
	virtual ~_ns1__Login() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LoginResponse
#define SOAP_TYPE__ns1__LoginResponse (16)
/* ns1:LoginResponse */
class SOAP_CMAC _ns1__LoginResponse
{
public:
	char *LoginResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique type id SOAP_TYPE__ns1__LoginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LoginResponse() { _ns1__LoginResponse::soap_default(NULL); }
	virtual ~_ns1__LoginResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SyncPatientInfo
#define SOAP_TYPE__ns1__SyncPatientInfo (17)
/* ns1:SyncPatientInfo */
class SOAP_CMAC _ns1__SyncPatientInfo
{
public:
	char *nCheckStationID;	/* optional element of type xsd:string */
	char *sDatetime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique type id SOAP_TYPE__ns1__SyncPatientInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SyncPatientInfo() { _ns1__SyncPatientInfo::soap_default(NULL); }
	virtual ~_ns1__SyncPatientInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SyncPatientInfoResponse
#define SOAP_TYPE__ns1__SyncPatientInfoResponse (18)
/* ns1:SyncPatientInfoResponse */
class SOAP_CMAC _ns1__SyncPatientInfoResponse
{
public:
	char *SyncPatientInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique type id SOAP_TYPE__ns1__SyncPatientInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SyncPatientInfoResponse() { _ns1__SyncPatientInfoResponse::soap_default(NULL); }
	virtual ~_ns1__SyncPatientInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdatePatientInfo
#define SOAP_TYPE__ns1__UpdatePatientInfo (19)
/* ns1:UpdatePatientInfo */
class SOAP_CMAC _ns1__UpdatePatientInfo
{
public:
	char *sAccount;	/* optional element of type xsd:string */
	char *sjsonPatientInfo;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique type id SOAP_TYPE__ns1__UpdatePatientInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdatePatientInfo() { _ns1__UpdatePatientInfo::soap_default(NULL); }
	virtual ~_ns1__UpdatePatientInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdatePatientInfoResponse
#define SOAP_TYPE__ns1__UpdatePatientInfoResponse (20)
/* ns1:UpdatePatientInfoResponse */
class SOAP_CMAC _ns1__UpdatePatientInfoResponse
{
public:
	char *UpdatePatientInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique type id SOAP_TYPE__ns1__UpdatePatientInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdatePatientInfoResponse() { _ns1__UpdatePatientInfoResponse::soap_default(NULL); }
	virtual ~_ns1__UpdatePatientInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SyncDataState
#define SOAP_TYPE__ns1__SyncDataState (21)
/* ns1:SyncDataState */
class SOAP_CMAC _ns1__SyncDataState
{
public:
	char *nCheckStationID;	/* optional element of type xsd:string */
	char *sDatetime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique type id SOAP_TYPE__ns1__SyncDataState */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SyncDataState() { _ns1__SyncDataState::soap_default(NULL); }
	virtual ~_ns1__SyncDataState() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SyncDataStateResponse
#define SOAP_TYPE__ns1__SyncDataStateResponse (22)
/* ns1:SyncDataStateResponse */
class SOAP_CMAC _ns1__SyncDataStateResponse
{
public:
	char *SyncDataStateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique type id SOAP_TYPE__ns1__SyncDataStateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SyncDataStateResponse() { _ns1__SyncDataStateResponse::soap_default(NULL); }
	virtual ~_ns1__SyncDataStateResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateDataState
#define SOAP_TYPE__ns1__UpdateDataState (23)
/* ns1:UpdateDataState */
class SOAP_CMAC _ns1__UpdateDataState
{
public:
	char *nPersondataid;	/* optional element of type xsd:string */
	char *sFileName;	/* optional element of type xsd:string */
	char *sFileDesc;	/* optional element of type xsd:string */
	char *sOccurDtm;	/* optional element of type xsd:string */
	char *lFileLength;	/* optional element of type xsd:string */
	char *lDataFrom;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique type id SOAP_TYPE__ns1__UpdateDataState */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateDataState() { _ns1__UpdateDataState::soap_default(NULL); }
	virtual ~_ns1__UpdateDataState() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateDataStateResponse
#define SOAP_TYPE__ns1__UpdateDataStateResponse (24)
/* ns1:UpdateDataStateResponse */
class SOAP_CMAC _ns1__UpdateDataStateResponse
{
public:
	char *UpdateDataStateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique type id SOAP_TYPE__ns1__UpdateDataStateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateDataStateResponse() { _ns1__UpdateDataStateResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateDataStateResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SyncReportState
#define SOAP_TYPE__ns1__SyncReportState (25)
/* ns1:SyncReportState */
class SOAP_CMAC _ns1__SyncReportState
{
public:
	char *nCheckStationID;	/* optional element of type xsd:string */
	char *starthandledtm;	/* optional element of type xsd:string */
	char *endhandledtm;	/* optional element of type xsd:string */
	char *reportcollectdtm;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique type id SOAP_TYPE__ns1__SyncReportState */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SyncReportState() { _ns1__SyncReportState::soap_default(NULL); }
	virtual ~_ns1__SyncReportState() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SyncReportStateResponse
#define SOAP_TYPE__ns1__SyncReportStateResponse (26)
/* ns1:SyncReportStateResponse */
class SOAP_CMAC _ns1__SyncReportStateResponse
{
public:
	char *SyncReportStateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique type id SOAP_TYPE__ns1__SyncReportStateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SyncReportStateResponse() { _ns1__SyncReportStateResponse::soap_default(NULL); }
	virtual ~_ns1__SyncReportStateResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UploadFile
#define SOAP_TYPE__ns1__UploadFile (27)
/* ns1:UploadFile */
class SOAP_CMAC _ns1__UploadFile
{
public:
	char *persondataid;	/* optional element of type xsd:string */
	char *sFileName;	/* optional element of type xsd:string */
	xsd__base64Binary *pFileContent;	/* optional element of type xsd:base64Binary */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique type id SOAP_TYPE__ns1__UploadFile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UploadFile() { _ns1__UploadFile::soap_default(NULL); }
	virtual ~_ns1__UploadFile() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UploadFileResponse
#define SOAP_TYPE__ns1__UploadFileResponse (28)
/* ns1:UploadFileResponse */
class SOAP_CMAC _ns1__UploadFileResponse
{
public:
	char *UploadFileResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique type id SOAP_TYPE__ns1__UploadFileResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UploadFileResponse() { _ns1__UploadFileResponse::soap_default(NULL); }
	virtual ~_ns1__UploadFileResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetQuery
#define SOAP_TYPE__ns1__GetQuery (29)
/* ns1:GetQuery */
class SOAP_CMAC _ns1__GetQuery
{
public:
	char *sql;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique type id SOAP_TYPE__ns1__GetQuery */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetQuery() { _ns1__GetQuery::soap_default(NULL); }
	virtual ~_ns1__GetQuery() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetQueryResponse_GetQueryResult
#define SOAP_TYPE__ns1__GetQueryResponse_GetQueryResult (36)
/* ns1:GetQueryResponse-GetQueryResult */
class SOAP_CMAC _ns1__GetQueryResponse_GetQueryResult
{
public:
	char *__any;
	char *__mixed;
public:
	virtual int soap_type() const { return 36; } /* = unique type id SOAP_TYPE__ns1__GetQueryResponse_GetQueryResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetQueryResponse_GetQueryResult() { _ns1__GetQueryResponse_GetQueryResult::soap_default(NULL); }
	virtual ~_ns1__GetQueryResponse_GetQueryResult() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetQueryResponse
#define SOAP_TYPE__ns1__GetQueryResponse (30)
/* ns1:GetQueryResponse */
class SOAP_CMAC _ns1__GetQueryResponse
{
public:
	_ns1__GetQueryResponse_GetQueryResult *GetQueryResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:GetQueryResponse-GetQueryResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique type id SOAP_TYPE__ns1__GetQueryResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetQueryResponse() { _ns1__GetQueryResponse::soap_default(NULL); }
	virtual ~_ns1__GetQueryResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateQuery
#define SOAP_TYPE__ns1__UpdateQuery (31)
/* ns1:UpdateQuery */
class SOAP_CMAC _ns1__UpdateQuery
{
public:
	char *sql;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique type id SOAP_TYPE__ns1__UpdateQuery */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateQuery() { _ns1__UpdateQuery::soap_default(NULL); }
	virtual ~_ns1__UpdateQuery() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateQueryResponse
#define SOAP_TYPE__ns1__UpdateQueryResponse (32)
/* ns1:UpdateQueryResponse */
class SOAP_CMAC _ns1__UpdateQueryResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique type id SOAP_TYPE__ns1__UpdateQueryResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateQueryResponse() { _ns1__UpdateQueryResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateQueryResponse() { }
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (38)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	ns1__AuthHeader *ns1__AuthHeader_;	/* mustUnderstand */
public:
	int soap_type() const { return 38; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef SOAP_TYPE___ns1__GetReportState
#define SOAP_TYPE___ns1__GetReportState (43)
/* Operation wrapper: */
struct __ns1__GetReportState
{
public:
	_ns1__GetReportState *ns1__GetReportState;	/* optional element of type ns1:GetReportState */
public:
	int soap_type() const { return 43; } /* = unique type id SOAP_TYPE___ns1__GetReportState */
};
#endif

#ifndef SOAP_TYPE___ns1__Login
#define SOAP_TYPE___ns1__Login (47)
/* Operation wrapper: */
struct __ns1__Login
{
public:
	_ns1__Login *ns1__Login;	/* optional element of type ns1:Login */
public:
	int soap_type() const { return 47; } /* = unique type id SOAP_TYPE___ns1__Login */
};
#endif

#ifndef SOAP_TYPE___ns1__SyncPatientInfo
#define SOAP_TYPE___ns1__SyncPatientInfo (51)
/* Operation wrapper: */
struct __ns1__SyncPatientInfo
{
public:
	_ns1__SyncPatientInfo *ns1__SyncPatientInfo;	/* optional element of type ns1:SyncPatientInfo */
public:
	int soap_type() const { return 51; } /* = unique type id SOAP_TYPE___ns1__SyncPatientInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdatePatientInfo
#define SOAP_TYPE___ns1__UpdatePatientInfo (55)
/* Operation wrapper: */
struct __ns1__UpdatePatientInfo
{
public:
	_ns1__UpdatePatientInfo *ns1__UpdatePatientInfo;	/* optional element of type ns1:UpdatePatientInfo */
public:
	int soap_type() const { return 55; } /* = unique type id SOAP_TYPE___ns1__UpdatePatientInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__SyncDataState
#define SOAP_TYPE___ns1__SyncDataState (59)
/* Operation wrapper: */
struct __ns1__SyncDataState
{
public:
	_ns1__SyncDataState *ns1__SyncDataState;	/* optional element of type ns1:SyncDataState */
public:
	int soap_type() const { return 59; } /* = unique type id SOAP_TYPE___ns1__SyncDataState */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateDataState
#define SOAP_TYPE___ns1__UpdateDataState (63)
/* Operation wrapper: */
struct __ns1__UpdateDataState
{
public:
	_ns1__UpdateDataState *ns1__UpdateDataState;	/* optional element of type ns1:UpdateDataState */
public:
	int soap_type() const { return 63; } /* = unique type id SOAP_TYPE___ns1__UpdateDataState */
};
#endif

#ifndef SOAP_TYPE___ns1__SyncReportState
#define SOAP_TYPE___ns1__SyncReportState (67)
/* Operation wrapper: */
struct __ns1__SyncReportState
{
public:
	_ns1__SyncReportState *ns1__SyncReportState;	/* optional element of type ns1:SyncReportState */
public:
	int soap_type() const { return 67; } /* = unique type id SOAP_TYPE___ns1__SyncReportState */
};
#endif

#ifndef SOAP_TYPE___ns1__UploadFile
#define SOAP_TYPE___ns1__UploadFile (71)
/* Operation wrapper: */
struct __ns1__UploadFile
{
public:
	_ns1__UploadFile *ns1__UploadFile;	/* optional element of type ns1:UploadFile */
public:
	int soap_type() const { return 71; } /* = unique type id SOAP_TYPE___ns1__UploadFile */
};
#endif

#ifndef SOAP_TYPE___ns1__GetQuery
#define SOAP_TYPE___ns1__GetQuery (75)
/* Operation wrapper: */
struct __ns1__GetQuery
{
public:
	_ns1__GetQuery *ns1__GetQuery;	/* optional element of type ns1:GetQuery */
public:
	int soap_type() const { return 75; } /* = unique type id SOAP_TYPE___ns1__GetQuery */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateQuery
#define SOAP_TYPE___ns1__UpdateQuery (79)
/* Operation wrapper: */
struct __ns1__UpdateQuery
{
public:
	_ns1__UpdateQuery *ns1__UpdateQuery;	/* optional element of type ns1:UpdateQuery */
public:
	int soap_type() const { return 79; } /* = unique type id SOAP_TYPE___ns1__UpdateQuery */
};
#endif

#ifndef SOAP_TYPE___ns1__GetReportState_
#define SOAP_TYPE___ns1__GetReportState_ (81)
/* Operation wrapper: */
struct __ns1__GetReportState_
{
public:
	_ns1__GetReportState *ns1__GetReportState;	/* optional element of type ns1:GetReportState */
public:
	int soap_type() const { return 81; } /* = unique type id SOAP_TYPE___ns1__GetReportState_ */
};
#endif

#ifndef SOAP_TYPE___ns1__Login_
#define SOAP_TYPE___ns1__Login_ (83)
/* Operation wrapper: */
struct __ns1__Login_
{
public:
	_ns1__Login *ns1__Login;	/* optional element of type ns1:Login */
public:
	int soap_type() const { return 83; } /* = unique type id SOAP_TYPE___ns1__Login_ */
};
#endif

#ifndef SOAP_TYPE___ns1__SyncPatientInfo_
#define SOAP_TYPE___ns1__SyncPatientInfo_ (85)
/* Operation wrapper: */
struct __ns1__SyncPatientInfo_
{
public:
	_ns1__SyncPatientInfo *ns1__SyncPatientInfo;	/* optional element of type ns1:SyncPatientInfo */
public:
	int soap_type() const { return 85; } /* = unique type id SOAP_TYPE___ns1__SyncPatientInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdatePatientInfo_
#define SOAP_TYPE___ns1__UpdatePatientInfo_ (87)
/* Operation wrapper: */
struct __ns1__UpdatePatientInfo_
{
public:
	_ns1__UpdatePatientInfo *ns1__UpdatePatientInfo;	/* optional element of type ns1:UpdatePatientInfo */
public:
	int soap_type() const { return 87; } /* = unique type id SOAP_TYPE___ns1__UpdatePatientInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__SyncDataState_
#define SOAP_TYPE___ns1__SyncDataState_ (89)
/* Operation wrapper: */
struct __ns1__SyncDataState_
{
public:
	_ns1__SyncDataState *ns1__SyncDataState;	/* optional element of type ns1:SyncDataState */
public:
	int soap_type() const { return 89; } /* = unique type id SOAP_TYPE___ns1__SyncDataState_ */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateDataState_
#define SOAP_TYPE___ns1__UpdateDataState_ (91)
/* Operation wrapper: */
struct __ns1__UpdateDataState_
{
public:
	_ns1__UpdateDataState *ns1__UpdateDataState;	/* optional element of type ns1:UpdateDataState */
public:
	int soap_type() const { return 91; } /* = unique type id SOAP_TYPE___ns1__UpdateDataState_ */
};
#endif

#ifndef SOAP_TYPE___ns1__SyncReportState_
#define SOAP_TYPE___ns1__SyncReportState_ (93)
/* Operation wrapper: */
struct __ns1__SyncReportState_
{
public:
	_ns1__SyncReportState *ns1__SyncReportState;	/* optional element of type ns1:SyncReportState */
public:
	int soap_type() const { return 93; } /* = unique type id SOAP_TYPE___ns1__SyncReportState_ */
};
#endif

#ifndef SOAP_TYPE___ns1__UploadFile_
#define SOAP_TYPE___ns1__UploadFile_ (95)
/* Operation wrapper: */
struct __ns1__UploadFile_
{
public:
	_ns1__UploadFile *ns1__UploadFile;	/* optional element of type ns1:UploadFile */
public:
	int soap_type() const { return 95; } /* = unique type id SOAP_TYPE___ns1__UploadFile_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetQuery_
#define SOAP_TYPE___ns1__GetQuery_ (97)
/* Operation wrapper: */
struct __ns1__GetQuery_
{
public:
	_ns1__GetQuery *ns1__GetQuery;	/* optional element of type ns1:GetQuery */
public:
	int soap_type() const { return 97; } /* = unique type id SOAP_TYPE___ns1__GetQuery_ */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateQuery_
#define SOAP_TYPE___ns1__UpdateQuery_ (99)
/* Operation wrapper: */
struct __ns1__UpdateQuery_
{
public:
	_ns1__UpdateQuery *ns1__UpdateQuery;	/* optional element of type ns1:UpdateQuery */
public:
	int soap_type() const { return 99; } /* = unique type id SOAP_TYPE___ns1__UpdateQuery_ */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (100)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 100; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (102)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 102; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (105)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 105; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (106)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 106; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
